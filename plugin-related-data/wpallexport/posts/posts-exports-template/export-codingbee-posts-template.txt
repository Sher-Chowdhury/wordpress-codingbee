[{"id":"1","name":"codingbee_export_template","options":"a:79:{s:14:\"is_user_export\";b:0;s:17:\"is_comment_export\";b:0;s:18:\"is_taxonomy_export\";b:0;s:3:\"cpt\";a:1:{i:0;s:4:\"post\";}s:11:\"whereclause\";s:0:\"\";s:10:\"joinclause\";a:0:{}s:11:\"exportquery\";O:8:\"WP_Query\":53:{s:5:\"query\";a:5:{s:9:\"post_type\";a:1:{i:0;s:4:\"post\";}s:11:\"post_status\";s:3:\"any\";s:7:\"orderby\";s:2:\"ID\";s:5:\"order\";s:3:\"ASC\";s:14:\"posts_per_page\";i:10;}s:10:\"query_vars\";a:66:{s:9:\"post_type\";a:1:{i:0;s:4:\"post\";}s:11:\"post_status\";s:3:\"any\";s:7:\"orderby\";s:2:\"ID\";s:5:\"order\";s:3:\"ASC\";s:14:\"posts_per_page\";i:10;s:5:\"error\";s:0:\"\";s:1:\"m\";s:0:\"\";s:1:\"p\";i:0;s:11:\"post_parent\";s:0:\"\";s:7:\"subpost\";s:0:\"\";s:10:\"subpost_id\";s:0:\"\";s:10:\"attachment\";s:0:\"\";s:13:\"attachment_id\";i:0;s:4:\"name\";s:0:\"\";s:6:\"static\";s:0:\"\";s:8:\"pagename\";s:0:\"\";s:7:\"page_id\";i:0;s:6:\"second\";s:0:\"\";s:6:\"minute\";s:0:\"\";s:4:\"hour\";s:0:\"\";s:3:\"day\";i:0;s:8:\"monthnum\";i:0;s:4:\"year\";i:0;s:1:\"w\";i:0;s:13:\"category_name\";s:0:\"\";s:3:\"tag\";s:0:\"\";s:3:\"cat\";s:0:\"\";s:6:\"tag_id\";s:0:\"\";s:6:\"author\";s:0:\"\";s:11:\"author_name\";s:0:\"\";s:4:\"feed\";s:0:\"\";s:2:\"tb\";s:0:\"\";s:5:\"paged\";i:0;s:8:\"meta_key\";s:0:\"\";s:10:\"meta_value\";s:0:\"\";s:7:\"preview\";s:0:\"\";s:1:\"s\";s:0:\"\";s:8:\"sentence\";s:0:\"\";s:5:\"title\";s:0:\"\";s:6:\"fields\";s:0:\"\";s:10:\"menu_order\";s:0:\"\";s:5:\"embed\";s:0:\"\";s:12:\"category__in\";a:0:{}s:16:\"category__not_in\";a:0:{}s:13:\"category__and\";a:0:{}s:8:\"post__in\";a:0:{}s:12:\"post__not_in\";a:0:{}s:13:\"post_name__in\";a:0:{}s:7:\"tag__in\";a:0:{}s:11:\"tag__not_in\";a:0:{}s:8:\"tag__and\";a:0:{}s:12:\"tag_slug__in\";a:0:{}s:13:\"tag_slug__and\";a:0:{}s:15:\"post_parent__in\";a:0:{}s:19:\"post_parent__not_in\";a:0:{}s:10:\"author__in\";a:0:{}s:14:\"author__not_in\";a:0:{}s:19:\"ignore_sticky_posts\";b:0;s:16:\"suppress_filters\";b:0;s:13:\"cache_results\";b:1;s:22:\"update_post_term_cache\";b:1;s:19:\"lazy_load_term_meta\";b:1;s:22:\"update_post_meta_cache\";b:1;s:8:\"nopaging\";b:0;s:17:\"comments_per_page\";s:2:\"50\";s:13:\"no_found_rows\";b:0;}s:9:\"tax_query\";O:12:\"WP_Tax_Query\":6:{s:7:\"queries\";a:0:{}s:8:\"relation\";s:3:\"AND\";s:16:\"\u0000*\u0000table_aliases\";a:0:{}s:13:\"queried_terms\";a:0:{}s:13:\"primary_table\";s:8:\"wp_posts\";s:17:\"primary_id_column\";s:2:\"ID\";}s:10:\"meta_query\";O:13:\"WP_Meta_Query\":9:{s:7:\"queries\";a:0:{}s:8:\"relation\";N;s:10:\"meta_table\";N;s:14:\"meta_id_column\";N;s:13:\"primary_table\";N;s:17:\"primary_id_column\";N;s:16:\"\u0000*\u0000table_aliases\";a:0:{}s:10:\"\u0000*\u0000clauses\";a:0:{}s:18:\"\u0000*\u0000has_or_relation\";b:0;}s:10:\"date_query\";b:0;s:14:\"queried_object\";N;s:17:\"queried_object_id\";N;s:7:\"request\";s:216:\"SELECT SQL_CALC_FOUND_ROWS  wp_posts.ID FROM wp_posts  WHERE 1=1  AND wp_posts.post_type = 'post' AND ((wp_posts.post_status <> 'trash' AND wp_posts.post_status <> 'auto-draft'))  ORDER BY wp_posts.ID ASC LIMIT 0, 10\";s:5:\"posts\";a:10:{i:0;O:7:\"WP_Post\":24:{s:2:\"ID\";i:31;s:11:\"post_author\";s:1:\"1\";s:9:\"post_date\";s:19:\"2014-05-04 10:08:55\";s:13:\"post_date_gmt\";s:19:\"2014-05-04 10:08:55\";s:12:\"post_content\";s:2623:\"No quiz required. \r\n\r\nIn Linux, nearly all day to day tasks are performed inside a command line terminal, aka the bash terminal. \r\n\r\n\r\nThere's a few ways to access it depending on various circumstance. \r\n\r\nFirst of it depends on whether you are sitting in front of your Linux machine or you want to access it remotely (e.g. this is likely if your machine is locked away in data centre, or server room).  \r\n\r\n\r\n<h2>Directly Accessing your Bash terminal<\/h2>\r\n\r\nIf you are sitting in front of your machine, then to access the terminal will depend on whether your machine has a graphical User Interface installed. If so then you can access the bash terminal by \r\n\r\nIf your machine has the graphical UI, then you can access your bash terminal by either:\r\n\r\n\r\n<pre>right click anywhere on the desktop -> click \"open in terminal\"  <\/pre>\r\n\r\nIf you machine doesn't have a UI installed then you are automatically presented with the bash terminal when your machine boots up. \r\n\r\n\r\n<h2>Remotely accessing the Bash terminal<\/h2>\r\n\r\nIf the machine you want to access is behind closed doors e.g. inside a data centre, server room, or in the cloud, then you can access the machine remotely from your local desktop. \r\n\r\n<h3>Remotely accessing a machine from a Linux Desktop<\/h3>\r\n\r\n\r\nIf your local desktop is a Linux machine of any distro (e.g. CentOS, Ubunto, Debian...etc.), Then you can access your remote server's bash terminal by establishing a remote session using the SSH protocol. SSH is a universal Linux protocol that is the secure remote connection of choice across all Linux and Unix distros.   \r\n\r\n\r\nUsing SSH is a bit like creating a secure tunnel between your machine and the remote machine. Once the SSH session has been established, any commands or tasks you perform are actually performed on the remote machine. We establish an ssh session using the ssh command. For example, if our local machine's fqdn is \"puppetmaster.local\" and we want to use this machine to connect as the \"vagrant\" user to  a remote machine which has the name \"puppetagent01.local\" then we run the command:\r\n\r\n\r\n\r\n<pre>\r\n[root@puppetmaster ~]$ ssh vagrant@puppetagent01.local\r\nvagrant@puppetagent01.local's password:\r\n[vagrant@puppetagent01 ~]$\r\n<\/pre>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<h3>Remotely accessing a machine from Windows Desktop<\/h3>\r\n\r\n\r\nWindows doesn't natively support ssh. Therefore tyou need to install an ssh client on your windows desktop machine in order to connect to a remote Linux machine. The most popular free ssh client is <a href=\"http:\/\/www.chiark.greenend.org.uk\/~sgtatham\/putty\/download.html\" rel=\"nofollow\">PuTTY<\/a>.\r\n\r\n\r\n\r\n\r\n\";s:10:\"post_title\";s:25:\"RHCSA - The Bash Terminal\";s:12:\"post_excerpt\";s:89:\"Book ref:\r\n\r\nn\/a\r\n\r\n \r\n\r\nStudy guide ref:\r\n\r\nn\/a\r\n\r\n \r\n\r\nNeed to learn more about:\r\n\r\nn\/a\";s:11:\"post_status\";s:7:\"publish\";s:14:\"comment_status\";s:6:\"closed\";s:11:\"ping_status\";s:6:\"closed\";s:13:\"post_password\";s:0:\"\";s:9:\"post_name\";s:23:\"rhcsa-the-bash-terminal\";s:7:\"to_ping\";s:0:\"\";s:6:\"pinged\";s:0:\"\";s:13:\"post_modified\";s:19:\"2015-11-11 21:25:53\";s:17:\"post_modified_gmt\";s:19:\"2015-11-11 21:25:53\";s:21:\"post_content_filtered\";s:0:\"\";s:11:\"post_parent\";i:0;s:4:\"guid\";s:26:\"http:\/\/codingbee.net\/?p=31\";s:10:\"menu_order\";i:256;s:9:\"post_type\";s:4:\"post\";s:14:\"post_mime_type\";s:0:\"\";s:13:\"comment_count\";s:1:\"0\";s:6:\"filter\";s:3:\"raw\";}i:1;O:7:\"WP_Post\":24:{s:2:\"ID\";i:33;s:11:\"post_author\";s:1:\"1\";s:9:\"post_date\";s:19:\"2014-05-04 10:11:45\";s:13:\"post_date_gmt\";s:19:\"2014-05-04 10:11:45\";s:12:\"post_content\";s:534:\"I've split all the commands into the following categories:\r\n\r\n\r\n<h2>commands for navigating around your vm<\/h2>\r\ncd\r\nls\r\npwd\r\n\r\n\r\n<h2>commands for viewing file contents<\/h2>\r\ncat\r\nless\r\n\r\n\r\n<h2>commands for creating\/moving\/modifying files and folder<\/h2>\r\nmkdir\r\nvim\r\nrmdir\r\ntouch\r\nredirection (technique)\r\nrm\r\nmv\r\ncp \r\n\r\n\r\n\r\n<h2>Commands for finding things<\/h2>\r\ngrep \r\nfind\r\nlocate\r\nwhich\r\nwhereis\r\n\r\n\r\n<h2>Commands for getting help<\/h2>\r\nman\r\npinfo\r\ninfo\r\nwhatis\r\n\r\n\r\n<h2>Commands for installing software<\/h2>\r\nrpm\r\nyum\r\n\r\n\r\n\r\n\r\n\r\n\";s:10:\"post_title\";s:40:\"RHCSA - Top 100 essential Linux commands\";s:12:\"post_excerpt\";s:0:\"\";s:11:\"post_status\";s:7:\"private\";s:14:\"comment_status\";s:6:\"closed\";s:11:\"ping_status\";s:6:\"closed\";s:13:\"post_password\";s:0:\"\";s:9:\"post_name\";s:20:\"rhcsa-basic-commands\";s:7:\"to_ping\";s:0:\"\";s:6:\"pinged\";s:0:\"\";s:13:\"post_modified\";s:19:\"2015-10-20 22:14:58\";s:17:\"post_modified_gmt\";s:19:\"2015-10-20 21:14:58\";s:21:\"post_content_filtered\";s:0:\"\";s:11:\"post_parent\";i:0;s:4:\"guid\";s:26:\"http:\/\/codingbee.net\/?p=33\";s:10:\"menu_order\";i:255;s:9:\"post_type\";s:4:\"post\";s:14:\"post_mime_type\";s:0:\"\";s:13:\"comment_count\";s:1:\"0\";s:6:\"filter\";s:3:\"raw\";}i:2;O:7:\"WP_Post\":24:{s:2:\"ID\";i:37;s:11:\"post_author\";s:1:\"1\";s:9:\"post_date\";s:19:\"2014-05-04 10:14:10\";s:13:\"post_date_gmt\";s:19:\"2014-05-04 10:14:10\";s:12:\"post_content\";s:3325:\"<strong>Commands:<\/strong>\r\n\r\nman {command}\r\n\r\ninfo {command}\r\n\r\npinfo {command}\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 # displays man pages in a slight differently user friendly format.\r\n\r\nman \u2013k {search term}\u00a0\u00a0\u00a0 # Searches all the search terms for the search-term, and lists all the man pages where there is a match.\r\n\r\napropros {search term} # same as the \u201cman \u2013k {search term}\u201d\r\n\r\ntype {command} \u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 # tells you if command is builtin or not, if not then shows the path.\r\n\r\nwhich {command}\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0 # shows command\u2019s file location (even for builtin ones).\r\n\r\nwhatis {command}\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # one line description of a command.\r\n\r\n{command} --help\u00a0\u00a0 \u00a0\u00a0\u00a0 # quick tips on how to use a command.\r\n\r\n{command} \u2013h \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0 # use this if the \u201c--help\u201d doesn\u2019t work.\r\n\r\nman hier\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 # Explains what\u2019s stored in the various directories in RHEL (layout of filesystems).\r\n\r\n<strong>Config files:<\/strong>\r\n\r\n\r\n\r\n<pre>\r\n\r\n$ cd \/usr\/share\/doc \u00a0\u00a0\u00a0 # directory containing all the man pages. This can also \r\n                        # contain diagram\/pictures\/graphics (you need to open \r\n                        # it via Firefox to view them). You can also find lots of \r\n                        # sample config files here. This is very useful!!!\r\n\r\n$ cd \/usr\/share\/info \u00a0\u00a0\u00a0# directory containing all the info pages.\r\n\r\n<\/pre>\r\n\r\n\r\n<strong>Notes:<\/strong>\r\n\r\nWhen you install a new software, the man pages may not be immediately added to the man pages database. To manually refresh this DB, run the following command:\r\n\r\n\/etc\/cron.daily\/makewhatis.cron\r\n\r\nEach man page is made up of sections (sections 1-9). For each command, some of these (if not most) sections are not applicable and hence empty. To see which sections are available for a given command, do:\r\n\r\nwhatis {command} # e.g. try \u201cwhatis passwd\u201d, or \u201cwhatis mount\u201d\r\n\r\nThe whatis command also lists what help sections are available and then you can access different sections like this:\r\n\r\n<pre>man {section number} {command}<\/pre>\r\n\r\ne.g. try:\r\n\r\n<pre>man 5 passwd\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 #This will display the help pages for the \/etc\/passwd config file.\r\n<\/pre>\r\n\r\nNote the man command quiries documentation stored in \/usr\/share\/man\r\n\r\nSome software packages don\u2019t come with man pages. Instead, the man pages have to be installed separately (not sure how to identify these packages, might be possible using yum or rpm)\r\n\r\n&nbsp;\r\n\r\n<strong>Related Services:<\/strong>\r\n\r\nInserttexthere\r\n\r\n<strong>Must survive reboot:<\/strong>\r\n\r\n\/etc\/cron.daily\/makewhatis.cron\u00a0\u00a0 #updates the man page\u2019s db manually.\r\n\r\n<strong>Software to install:<\/strong>\r\n\r\nn\/a\r\n\r\n<strong>GUI tool:<\/strong>\r\n\r\nsystem --=> help\r\n\r\nyelp #start gui help from the command line interface.\r\n\r\n<strong>Book ref:<\/strong>\r\n\r\npage 28, chapter 3\r\n\r\n<strong>Study guide ref:<\/strong>\r\n\r\nRH124 - page 122 (this has a table showing listing all the available sections and describing it)\r\n\r\nRH124 - page 21 (getting help via gnome)\r\n\r\n<strong>Need to learn more about:<\/strong>\r\n\r\n<a href=\"http:\/\/en.wikipedia.org\/wiki\/Man_page\">http:\/\/en.wikipedia.org\/wiki\/Man_page<\/a>\r\n\r\n<a href=\"http:\/\/www.freebsd.org\/cgi\/man.cgi?query=hier&amp;apropos=0&amp;sektion=0&amp;manpath=FreeBSD+6.1-RELEASE&amp;format=html\">man page for \u201chier<\/a>\u201d\r\n\r\n&nbsp;\";s:10:\"post_title\";s:32:\"Linux - Help at the Command Line\";s:12:\"post_excerpt\";s:89:\"Book ref:\r\n\r\nn\/a\r\n\r\n \r\n\r\nStudy guide ref:\r\n\r\nn\/a\r\n\r\n \r\n\r\nNeed to learn more about:\r\n\r\nn\/a\";s:11:\"post_status\";s:7:\"publish\";s:14:\"comment_status\";s:4:\"open\";s:11:\"ping_status\";s:4:\"open\";s:13:\"post_password\";s:0:\"\";s:9:\"post_name\";s:30:\"linux-help-at-the-command-line\";s:7:\"to_ping\";s:0:\"\";s:6:\"pinged\";s:0:\"\";s:13:\"post_modified\";s:19:\"2015-07-25 20:43:25\";s:17:\"post_modified_gmt\";s:19:\"2015-07-25 19:43:25\";s:21:\"post_content_filtered\";s:0:\"\";s:11:\"post_parent\";i:0;s:4:\"guid\";s:26:\"http:\/\/codingbee.net\/?p=37\";s:10:\"menu_order\";i:253;s:9:\"post_type\";s:4:\"post\";s:14:\"post_mime_type\";s:0:\"\";s:13:\"comment_count\";s:1:\"0\";s:6:\"filter\";s:3:\"raw\";}i:3;O:7:\"WP_Post\":24:{s:2:\"ID\";i:39;s:11:\"post_author\";s:1:\"1\";s:9:\"post_date\";s:19:\"2014-05-04 10:17:22\";s:13:\"post_date_gmt\";s:19:\"2014-05-04 10:17:22\";s:12:\"post_content\";s:1042:\"&nbsp;\r\n\r\n<strong>Commands:<\/strong>\r\n\r\ncat\r\n\r\nnano\u00a0\u00a0\u00a0\u00a0 # This is a text editor. no need to learn this. vim is much better.\r\n\r\n<strong>Config files:<\/strong>\r\n\r\nn\/a\r\n\r\n<strong>Notes:<\/strong>\r\n\r\nHere are some example using cat (as a text file creator rather than a file content\u2019s outputter):\r\n\r\nexample 1:\r\n\r\n$ cat &lt;&lt;EOF =>testfile\u00a0\u00a0 # This lets you start writing stuff, until you type EOF, after that your content gets stored in testfile.\r\n\r\n=> this is a testfile\r\n\r\n=> another line\r\n\r\n=> EOF\r\n\r\nexample 2:\r\n\r\n$ cat &lt;&lt;EOF\u00a0\u00a0 \u00a0\u00a0\u00a0 \u00a0\u00a0\u00a0\u00a0\u00a0# Here the output is printed directly pack to the command line.\r\n\r\n=> this is a testline\r\n\r\n=> another line\r\n\r\n=> yet another line\r\n\r\n=> EOF\r\n\r\nthis is a testline\r\n\r\nanother line\r\n\r\nyet another line\r\n\r\n<strong>Related Services:<\/strong>\r\n\r\nInserttexthere\r\n\r\n&nbsp;\r\n\r\n<strong>Must survive reboot:<\/strong>\r\n\r\nn\/a\r\n\r\n<strong>Software to install:<\/strong>\r\n\r\nn\/a\r\n\r\n<strong>GUI tool:<\/strong>\r\n\r\nn\/a\r\n\r\n<strong>Book ref:<\/strong>\r\n\r\nn\/a\r\n\r\n<strong>Study guide ref:<\/strong>\r\n\r\nn\/a\";s:10:\"post_title\";s:20:\"Linux - cat and nano\";s:12:\"post_excerpt\";s:89:\"Book ref:\r\n\r\nn\/a\r\n\r\n \r\n\r\nStudy guide ref:\r\n\r\nn\/a\r\n\r\n \r\n\r\nNeed to learn more about:\r\n\r\nn\/a\";s:11:\"post_status\";s:7:\"publish\";s:14:\"comment_status\";s:4:\"open\";s:11:\"ping_status\";s:4:\"open\";s:13:\"post_password\";s:0:\"\";s:9:\"post_name\";s:18:\"linux-cat-and-nano\";s:7:\"to_ping\";s:0:\"\";s:6:\"pinged\";s:0:\"\";s:13:\"post_modified\";s:19:\"2014-05-10 08:42:17\";s:17:\"post_modified_gmt\";s:19:\"2014-05-10 07:42:17\";s:21:\"post_content_filtered\";s:0:\"\";s:11:\"post_parent\";i:0;s:4:\"guid\";s:26:\"http:\/\/codingbee.net\/?p=39\";s:10:\"menu_order\";i:252;s:9:\"post_type\";s:4:\"post\";s:14:\"post_mime_type\";s:0:\"\";s:13:\"comment_count\";s:1:\"0\";s:6:\"filter\";s:3:\"raw\";}i:4;O:7:\"WP_Post\":24:{s:2:\"ID\";i:445;s:11:\"post_author\";s:1:\"1\";s:9:\"post_date\";s:19:\"2014-05-10 16:44:46\";s:13:\"post_date_gmt\";s:19:\"2014-05-10 15:44:46\";s:12:\"post_content\";s:1090:\"C# is a powerfull object oriented program language. It is heavily engineered programming language.\r\n\r\nIn this tutorials you are going to learn all kinds of things.\r\n\r\nIn our tutorials we will show you a lot of things that won't make a lot of things until much later. That's why we will show you a lot of things without explaining them in detail. But will cover them in more detail in later units. When this happens we will explain\r\n\r\nBecause c# is syntax, we will show you a lot of things but explain them later.\r\n\r\nC# is a really powerful programming language. It is basically\r\n\r\nC# is a syntax heavy language, that means that even writing a basic program involves typing out a lot of code that on first impressions look superfluous. However everything is important and you only come to appreciate them in later lessons.\r\n\r\nSo if we just touch on something new without explaining it, then don't panic, we will cover it in later lessons, and for the time being just accept what we show you as being something that is necessary.\r\n\r\nReference\r\nhttp:\/\/blog.pluralsight.com\/learning-path-csharp\";s:10:\"post_title\";s:17:\"c# - Introduction\";s:12:\"post_excerpt\";s:0:\"\";s:11:\"post_status\";s:7:\"publish\";s:14:\"comment_status\";s:4:\"open\";s:11:\"ping_status\";s:4:\"open\";s:13:\"post_password\";s:0:\"\";s:9:\"post_name\";s:14:\"c-introduction\";s:7:\"to_ping\";s:0:\"\";s:6:\"pinged\";s:0:\"\";s:13:\"post_modified\";s:19:\"2014-11-06 10:40:53\";s:17:\"post_modified_gmt\";s:19:\"2014-11-06 10:40:53\";s:21:\"post_content_filtered\";s:0:\"\";s:11:\"post_parent\";i:0;s:4:\"guid\";s:27:\"http:\/\/codingbee.net\/?p=445\";s:10:\"menu_order\";i:172;s:9:\"post_type\";s:4:\"post\";s:14:\"post_mime_type\";s:0:\"\";s:13:\"comment_count\";s:1:\"0\";s:6:\"filter\";s:3:\"raw\";}i:5;O:7:\"WP_Post\":24:{s:2:\"ID\";i:451;s:11:\"post_author\";s:1:\"1\";s:9:\"post_date\";s:19:\"2014-05-10 17:13:27\";s:13:\"post_date_gmt\";s:19:\"2014-05-10 16:13:27\";s:12:\"post_content\";s:223:\"You should already be familiar with the following:\r\n<ul>\r\n\t<li>Variables<\/li>\r\n\t<li>Conditonal construct, e.g. If statements<\/li>\r\n\t<li>Conditional Operators,<\/li>\r\n\t<li>regular expressions<\/li>\r\n\t<li>wild cards<\/li>\r\n<\/ul>\";s:10:\"post_title\";s:33:\"c# - What you should already know\";s:12:\"post_excerpt\";s:0:\"\";s:11:\"post_status\";s:7:\"publish\";s:14:\"comment_status\";s:4:\"open\";s:11:\"ping_status\";s:4:\"open\";s:13:\"post_password\";s:0:\"\";s:9:\"post_name\";s:30:\"c-what-you-should-already-know\";s:7:\"to_ping\";s:0:\"\";s:6:\"pinged\";s:0:\"\";s:13:\"post_modified\";s:19:\"2014-05-10 17:15:21\";s:17:\"post_modified_gmt\";s:19:\"2014-05-10 16:15:21\";s:21:\"post_content_filtered\";s:0:\"\";s:11:\"post_parent\";i:0;s:4:\"guid\";s:27:\"http:\/\/codingbee.net\/?p=451\";s:10:\"menu_order\";i:171;s:9:\"post_type\";s:4:\"post\";s:14:\"post_mime_type\";s:0:\"\";s:13:\"comment_count\";s:1:\"0\";s:6:\"filter\";s:3:\"raw\";}i:6;O:7:\"WP_Post\":24:{s:2:\"ID\";i:453;s:11:\"post_author\";s:1:\"1\";s:9:\"post_date\";s:19:\"2014-05-10 17:17:20\";s:13:\"post_date_gmt\";s:19:\"2014-05-10 16:17:20\";s:12:\"post_content\";s:6859:\"Here we are going to first show you a simple \"hello world\" program in the form of an exe file. When you double-click on the exe file, all that will happen is that a console terminal will open a display the message \"hello world\", like this:\r\n\r\n&nbsp;\r\n<h3><strong><span style=\"color: #008000;\">Step 1 -Write the code<\/span> <\/strong><\/h3>\r\nOpen notepad and write:\r\n\r\n[csharp]\r\n\r\nusing System;\r\nclass HelloWorld\r\n{\r\n   static void Main()         [content_tooltip id=&quot;650&quot;]\r\n     {\r\n        string message = &quot;Hello World&quot;;\r\n        Console.WriteLine (message);\r\n        Console.ReadLine();\r\n     }\r\n}\r\n\r\n[\/csharp]\r\n\r\n[vision_notification style=\"warning\" font_size=\"12px\" closeable=\"false\"] In c#, everything is case sensitve. That means if you type \"using system;\" instead of typing \"using System;\" then you will get an error message. [\/vision_notification]\r\n\r\n[vision_notification style=\"neutral\" font_size=\"12px\" closeable=\"false\"] Every c# statement must end with a semi-colon. [\/vision_notification]\r\n\r\n<strong>line 1 -<\/strong> Here we are importing a \"namespace\" called \"System\". A namespace is essentially a collection of \"classes\" that we want to make use of in our program. A class is basically a collection of blocks of code, of which, some of these blocks are known as \"methods\". We will cover Classes, Namespaces, and Methods, in more detail in later lessons. We are loading the System namespace into memory here because, it contains a class called \"Console\" which we will be using further down in the code.\r\n\r\n<strong>line 2 - <\/strong>Here we are declaring a class, and we chose to call it \"HelloWorld\". In this class we have defined only one method, which we have called \"Main\". You can give a method any name you like, however calling a method \"Main\" has special meaning in c#. We will cover methods (including the Main method) in later lessons.\r\n\r\n<strong>line 4 - <\/strong>Here we are defining a method called \"Main\". The keywords \"static\" and \"void\" defines some of the characteristics of this method. We will cover this in more detail in later lessons.\r\n\r\n<strong>Line 6<\/strong> - Here we are declaring a string variable called \"message\".\r\n\r\n<strong>Line 7<\/strong> - Here we are making use of a method called \"WriteLine\" which resides in a class called \"Console\", which in turn resides in the \"System\" namespace. The writeline method's purpose, as the name indicates, is to write something onto a console. I have instructed writeline what to display by placing the \"message\" variable into the round-brackets. If I didn't place anything in the round brackets, then I would get an error message because the writeline method requires a parameter input for it to work.\r\n\r\n<strong>Line 8<\/strong> - Here we are using another method that belongs to the Console class, this method is called ReadLine. We are using this method to keep the console window open. If I try to run the program without including this line, then the terminal will pop up for a fraction of a second, and then closes again. This method forces the terminal to stay open.\r\n<h3><span style=\"color: #339966;\"><strong>Step 2<\/strong> -Save the code<\/span><\/h3>\r\nSave the file as a \"cs\" file:\r\n\r\n<a href=\"http:\/\/progeektips.com\/wp-content\/uploads\/2014\/01\/2014-01-18-18_38_51-_new-2-Notepad++.png\"><img class=\"aligncenter size-full wp-image-101\" src=\"http:\/\/progeektips.com\/wp-content\/uploads\/2014\/01\/2014-01-18-18_38_51-_new-2-Notepad++.png\" alt=\"2014-01-18 18_38_51-_new  2 - Notepad++\" width=\"710\" height=\"213\" \/><\/a>\r\n<h3><span style=\"color: #339966;\"><strong>Step 3<\/strong> - Locate the compiler<\/span><\/h3>\r\nNext we generate an executable from this cs file (aka we are going to compile the code). Open up cmd (as admin), and then navigate to the latest version of your .net framework's directory.\r\n\r\n<a href=\"http:\/\/progeektips.com\/wp-content\/uploads\/2014\/01\/2014-01-18-18_32_27-Program-Manager.png\"><img class=\"aligncenter size-full wp-image-100\" src=\"http:\/\/progeektips.com\/wp-content\/uploads\/2014\/01\/2014-01-18-18_32_27-Program-Manager.png\" alt=\"2014-01-18 18_32_27-Program Manager\" width=\"854\" height=\"561\" \/><\/a>\r\n<h2><span style=\"color: #008000;\">Step 4 - Compile the code<\/span><\/h2>\r\nIn this directory, you should find the csharp compiler, which is called \"csc.exe\". Now run the csc.exe (passing in the path to your helloworld csharp file as a parameter):\r\n\r\n<a href=\"http:\/\/progeektips.com\/wp-content\/uploads\/2014\/01\/2014-01-18-18_44_23-Program-Manager.png\"><img class=\"aligncenter size-full wp-image-103\" src=\"http:\/\/progeektips.com\/wp-content\/uploads\/2014\/01\/2014-01-18-18_44_23-Program-Manager.png\" alt=\"2014-01-18 18_44_23-Program Manager\" width=\"854\" height=\"561\" \/><\/a>\r\n\r\nThis will create the exe file which you will find in the .net folder.\r\n\r\nNote: Your compiled program ends up in the folder where your terminal has been cd into. If you want your programs to be automatically placed in another folder, e.g. c:\\, then first go to that directory and then run the compiler by fully stating it's path:\r\n\r\n<a href=\"http:\/\/progeektips.com\/wp-content\/uploads\/2014\/01\/2014-01-18-19_11_53-Administrator_-Command-Prompt.png\"><img class=\"aligncenter size-full wp-image-105\" src=\"http:\/\/progeektips.com\/wp-content\/uploads\/2014\/01\/2014-01-18-19_11_53-Administrator_-Command-Prompt.png\" alt=\"2014-01-18 19_11_53-Administrator_ Command Prompt\" width=\"854\" height=\"560\" \/><\/a>\r\n<h3><span style=\"color: #008000;\">Step 5 - Locate the Program\r\n<\/span><\/h3>\r\nOpen the folder where the exe has been saved to (this is the directory that your terminal is in at the time of running the csc.exe).\r\n\r\n<a href=\"http:\/\/progeektips.com\/wp-content\/uploads\/2014\/01\/2014-01-18-19_18_01-temp.png\"><img class=\"aligncenter size-full wp-image-106\" src=\"http:\/\/progeektips.com\/wp-content\/uploads\/2014\/01\/2014-01-18-19_18_01-temp.png\" alt=\"2014-01-18 19_18_01-temp\" width=\"1039\" height=\"565\" \/><\/a>\r\n\r\nTip: Just type \"explorer .\" this will open up in explorer window in the terminal in the current directory (which is denoted by \".\").\r\n<h3><span style=\"color: #008000;\"><strong>Step 6 - Run the Hello World program<\/strong><\/span><\/h3>\r\nDouble click the exe to run it:\r\n\r\n<a href=\"http:\/\/progeektips.com\/wp-content\/uploads\/2014\/01\/2014-01-18-19_19_31-C__temp_helloworld.exe_.png\"><img class=\"aligncenter size-full wp-image-107\" src=\"http:\/\/progeektips.com\/wp-content\/uploads\/2014\/01\/2014-01-18-19_19_31-C__temp_helloworld.exe_.png\" alt=\"2014-01-18 19_19_31-C__temp_helloworld.exe\" width=\"852\" height=\"559\" \/><\/a>\r\n\r\nHere's another example csharp program, but this program is doing a bit of maths:\r\n\r\n[csharp]\r\nusing System;\r\n\r\nclass SimpleMaths\r\n{\r\n    static void Main()\r\n    {\r\n        int x = 12 * 30;\r\n        Console.WriteLine (&quot;Twelve times thirty is equal to: &quot; + x);\r\n        Console.ReadLine();\r\n    }\r\n}\r\n[\/csharp]\r\n\r\nThe compiled exe outputs:\r\n\r\n&nbsp;\";s:10:\"post_title\";s:16:\"c# - Hello World\";s:12:\"post_excerpt\";s:0:\"\";s:11:\"post_status\";s:7:\"publish\";s:14:\"comment_status\";s:4:\"open\";s:11:\"ping_status\";s:4:\"open\";s:13:\"post_password\";s:0:\"\";s:9:\"post_name\";s:13:\"c-hello-world\";s:7:\"to_ping\";s:0:\"\";s:6:\"pinged\";s:0:\"\";s:13:\"post_modified\";s:19:\"2014-05-11 12:54:27\";s:17:\"post_modified_gmt\";s:19:\"2014-05-11 11:54:27\";s:21:\"post_content_filtered\";s:0:\"\";s:11:\"post_parent\";i:0;s:4:\"guid\";s:27:\"http:\/\/codingbee.net\/?p=453\";s:10:\"menu_order\";i:170;s:9:\"post_type\";s:4:\"post\";s:14:\"post_mime_type\";s:0:\"\";s:13:\"comment_count\";s:1:\"0\";s:6:\"filter\";s:3:\"raw\";}i:7;O:7:\"WP_Post\":24:{s:2:\"ID\";i:456;s:11:\"post_author\";s:1:\"1\";s:9:\"post_date\";s:19:\"2014-05-10 17:19:59\";s:13:\"post_date_gmt\";s:19:\"2014-05-10 16:19:59\";s:12:\"post_content\";s:1166:\"It is always good practice to insert comments into your code so that you (as well as others) can understand what your code is doing.\r\n\r\nYou can place a single line comment after a line of code, or on a line of it's own using the \"\/\/\" notation.\r\n\r\nIf you want to insert a multi-line comment, then you can begin it using \/* and end the comment with *\/.\r\n\r\nHere we the 2 comments types in actions\r\n\r\n[csharp]\r\n\/*\r\nProgram name: Hello World\r\nVersion:      1.0\r\nDescription:  Opens up a terminal and displays &quot;Hello World&quot;\r\n*\/\r\n\r\nusing System; \/\/ here we are importing the &quot;System&quot; namespace\r\n\r\n\/\/ We are about to define the HelloWorld class.\r\nclass HelloWorld \/\/ This line is called the &quot;class declaration&quot; line\r\n{         \/\/ curly brackets are used to structure the program, here we are indicating the start of the &quot;HelloWorld&quot; class.\r\n   static void Main() \/\/ This is the &quot;method declaration&quot; line\r\n\r\n     {    \/\/ Start of method's code block\r\n        string message = &quot;Hello World&quot;;\r\n        Console.WriteLine (message);\r\n        Console.ReadLine();\r\n     }  \/\/ End of method\r\n} \/\/ end of class\r\n\r\n[\/csharp]\";s:10:\"post_title\";s:33:\"c# - Adding comments to your code\";s:12:\"post_excerpt\";s:0:\"\";s:11:\"post_status\";s:7:\"publish\";s:14:\"comment_status\";s:4:\"open\";s:11:\"ping_status\";s:4:\"open\";s:13:\"post_password\";s:0:\"\";s:9:\"post_name\";s:30:\"c-adding-comments-to-your-code\";s:7:\"to_ping\";s:0:\"\";s:6:\"pinged\";s:0:\"\";s:13:\"post_modified\";s:19:\"2014-05-10 17:19:59\";s:17:\"post_modified_gmt\";s:19:\"2014-05-10 16:19:59\";s:21:\"post_content_filtered\";s:0:\"\";s:11:\"post_parent\";i:0;s:4:\"guid\";s:27:\"http:\/\/codingbee.net\/?p=456\";s:10:\"menu_order\";i:169;s:9:\"post_type\";s:4:\"post\";s:14:\"post_mime_type\";s:0:\"\";s:13:\"comment_count\";s:1:\"0\";s:6:\"filter\";s:3:\"raw\";}i:8;O:7:\"WP_Post\":24:{s:2:\"ID\";i:458;s:11:\"post_author\";s:1:\"1\";s:9:\"post_date\";s:19:\"2014-05-10 17:21:48\";s:13:\"post_date_gmt\";s:19:\"2014-05-10 16:21:48\";s:12:\"post_content\";s:5087:\"When programming it is essential to organize and structure your code, otherwise it will become unwieldy to work with.\r\n\r\nc# offer a number of ways to structure and and organize our code using:\r\n<ul>\r\n\t<li>methods<\/li>\r\n\t<li>classes<\/li>\r\n\t<li>namespaces<\/li>\r\n<\/ul>\r\nMethods are used for storing blocks of codes and each method is designed to perform a specific task (aka function).\r\n\r\nMethods, in turn, are stored in \"classes\". These classes  class can store one or more methods.\r\n\r\nClasses in turn are stored in \"namespaces\".  You can think of Namespaces as a bit like folders on a windows machine. That means that namespaces have tree structures where a namespace can house classes as well as other lower-level namespaces.  As a result we have the following hierarchy:\r\n\r\nnamespaces => classes => methods\r\n\r\nOne of the key strength of c# is that it has access to a immensely powerful pre-installed namespace, that is in the form of the .net framework. This framework has a library containing thousands of ready-made classes that you can make use of for building your own applications.\r\n\r\nThe top level namespace in the .net framework is called \"System\". All  classes and lower-level namespaces are housed under the System tree structure. The <a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/system%28v=vs.110%29.aspx\" target=\"_blank\">.net Framework library<\/a> website fully documents all the classes and their method.\r\n\r\nWith this in mind, let's revisit our hello world example again:\r\n\r\n[csharp]\r\n\r\nusing System;\r\nclass HelloWorld\r\n{\r\n    static void Main()\r\n\t{\r\n\t\tstring message = &quot;Hello World&quot;;\r\n\t\tConsole.WriteLine (message);\r\n                Console.ReadLine();\r\n\t}\r\n}\r\n\r\n[\/csharp]\r\n\r\n<strong>Line 1<\/strong> - Here we are telling our program to load all the classes stored directly under the \"System\" namespace into memory. This won't load any classes that are stored in other namespaces under System.  As a result, one of the classes that will be loaded into memory, will be a class called \"Console\".\r\n\r\n<strong>Line 7<\/strong> - Here we are using the \"<a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/system.console%28v=vs.110%29.aspx\" target=\"_blank\">Console<\/a>\" class (which we loaded into memory in line 1). In particular we are using a \".\" notation to specify that we want to use the \"<a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/xf2k8ftb%28v=vs.110%29.aspx\" target=\"_blank\">WriteLine<\/a>\" method within the console line, to write something to the terminal.\r\n\r\n<strong>Line 8<\/strong> - Here we are using the Console class again, but this time we are using the <a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/system.console.readline%28v=vs.110%29.aspx\" target=\"_blank\">ReadLine<\/a>. Strictly speaking ReadLine should be used for capturing anything that a user types into the terminal, but here we are using to keep the terminal open.\r\n\r\n[vision_notification style=\"neutral\" font_size=\"12px\" closeable=\"false\"] You can identify a method, by the fact that a method is always followed by a pair of round brackets. These round brackets can either contain some content or are empty, depending on the type of method you are running. [\/vision_notification]\r\n\r\nIn Line 1, the program loaded all the classes that are in the \"System\" namespace. However another way to tell the program where to find a class, is by using a class's fully qualfied name, like this:\r\n\r\n[csharp]\r\n\/\/ the &quot;using System;&quot; is no longer needed.\r\nclass HelloWorld\r\n{\r\n    static void Main()\r\n\t{\r\n\t\tstring message = &quot;Hello World&quot;;\r\n\t\tSystem.Console.WriteLine (message);\r\n                System.Console.ReadLine();\r\n\t}\r\n}\r\n\r\n[\/csharp]\r\n\r\nLine 7 - here we used the full path of the class, along with which class's method to use. The general syntax that we used to drill down to the is as follows:\r\n<pre>namespace1.namespace2...namespaceX.classname.methodname()<\/pre>\r\nLets take a look at another example, let's say we want a program that works out how many days there are for a given number of weeks. Then we can create something like this:\r\n\r\n[csharp]\r\nusing System;\r\nclass sampleclass\r\n{\r\n\tstatic void Main()\r\n\t{\r\n                int NumberOfDays = WeekToDays (4)\r\n\t\tConsole.WriteLine (NumberOfDays);      \/\/ 28\r\n\t}\r\n\r\n\tstatic int WeekToDays (int Week)\r\n\t{\r\n\t\tint days = Week * 7;\r\n\t\treturn days;\r\n\t}\r\n}\r\n[\/csharp]\r\n\r\nIn this example, we have a class that contains 2 methods, they are \"Main\" and \"WeekToDays\". Also notice that the \"Main\" method actually triggers the \"WeekToDays\" method as part of its own running.\r\n\r\nThis program will work out how many days there are in 4 weeks. In this case running this program will display \"28\".\r\n\r\nLine weektodays - you will notice that the round brackets contains some content, this is the input parameter. Also just before the \"WeekToDays\" we stated \"int\", this represents the form of the output parameter. We will cover more about input and output parameters later.\r\n\r\nClasses essentially lets you define\/create your very own custom types, on top of the types that are come included with .net, e.g. int, string, bool, console, etc.\";s:10:\"post_title\";s:37:\"c# - Methods, Classes, and Namespaces\";s:12:\"post_excerpt\";s:0:\"\";s:11:\"post_status\";s:7:\"publish\";s:14:\"comment_status\";s:4:\"open\";s:11:\"ping_status\";s:4:\"open\";s:13:\"post_password\";s:0:\"\";s:9:\"post_name\";s:32:\"c-methods-classes-and-namespaces\";s:7:\"to_ping\";s:0:\"\";s:6:\"pinged\";s:0:\"\";s:13:\"post_modified\";s:19:\"2014-05-10 17:21:48\";s:17:\"post_modified_gmt\";s:19:\"2014-05-10 16:21:48\";s:21:\"post_content_filtered\";s:0:\"\";s:11:\"post_parent\";i:0;s:4:\"guid\";s:27:\"http:\/\/codingbee.net\/?p=458\";s:10:\"menu_order\";i:168;s:9:\"post_type\";s:4:\"post\";s:14:\"post_mime_type\";s:0:\"\";s:13:\"comment_count\";s:1:\"0\";s:6:\"filter\";s:3:\"raw\";}i:9;O:7:\"WP_Post\":24:{s:2:\"ID\";i:464;s:11:\"post_author\";s:1:\"1\";s:9:\"post_date\";s:19:\"2014-05-10 17:25:15\";s:13:\"post_date_gmt\";s:19:\"2014-05-10 16:25:15\";s:12:\"post_content\";s:32172:\"Whenever you create an object (aka an instance of a class), you often want to store data within that object. You can think of this info as the object's metadata. For example, lets say want to have a class called \"Employee\", and you want to use that class to create \"employee\" objects, and each employee-object needs to store the following info:\r\n\r\nfirstname\r\nage\r\nDateJoined\r\nSalary\r\n\r\nNote: the words \"instance\" and \"object\" are synonyms.\r\n\r\nIn order to make this possible, you first need to write your Employee class to accept this info. After that, you can call on the class to instantiate the object and pass the metadata into it.\r\n\r\nThere are a number of ways to write your\r\n<h3>1st Approach: Store the data directly in an object, using \"Fields\"<\/h3>\r\nIn this approach we have declared inside the employee class, that an employee-object can store 3 bits of data:\r\nage,\r\nfirstname,\r\nsalary.\r\n\r\nIn C#, these items are referred to as \"fields\", and whenever you declare a new field, you have to also specify what type of data it can hold. For example in in case of the \"age\" field, we have specified that it can only hold integers (as indicated by the \"int\").\r\n\r\nWe also have to specify the access level in the form of <a href=\"http:\/\/msdn.microsoft.com\/en-us\/library\/ms173121.aspx\">access modifiers<\/a>. We will cover more about access modifiers later.\r\n\r\n[csharp]\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace ConsoleApp\r\n{\r\n\r\n    class Employee\r\n    {\r\n        public int age;\r\n        public string firstname;\r\n        public double salary;\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main()\r\n        {\r\n            \/\/ here we create a new object using the Employee class.\r\n            Employee Dave = new Employee();\r\n\r\n            Dave.age = 50;\r\n            Dave.firstname = &quot;David&quot;;\r\n            Dave.salary = 35461.32;\r\n            Console.WriteLine(&quot;{0} is {1} years old and earns \u00a3{2} per year.&quot;, Dave.firstname, Dave.age, Dave.salary);\r\n        }\r\n    }\r\n}\r\n\r\n[\/csharp]\r\n\r\nThis will output:<img alt=\"\" src=\"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAkoAAABNCAIAAADW29xfAAAPO0lEQVR4nO2dz44dRxXGe\/5ZLFGsGPMKrBFvwGPwBjwBT+JNdrBCQkEoyraVXcQigojIwaBIFoyQFxaWiIhIRmZhc+mpOuer75yq7tv3+vspivpWn\/rOd05Xd92ZO56ZfvPZP3\/7x3\/97k\/\/\/ujpfz7+8ruP\/\/zdVy\/vfvbzX0xCCCHE6aLtTQghxBmi7U0IIcQZ4m1v8zzP83wIK16aI0dk\/h8D1QrlOkUoY60JAsZimk9MObzkpRKpo3grc1frM8EG\/skU3vpn4hkdLO7dKdH+JHSAT96\/OCZ4e5sXjzNzsR7DcknhsziVVjNHzJUdlTVnrd3PfqugzyGdsXjK+1mfObZZD80U0QXfXDzFS7xI8EhuSZM6RX9y\/sWRaW5vS45t1sbzlvAMFroXQGY5+m2Q8DlVtzG\/Hjydzdjzij06\/E1dr1u+q96a93TMGHC78f6jOvUsz3\/Uj9iUxPaGV0wx7i2FqE5zvKjLMw\/wwpormNEHIol+hnR4kzjscCpar3kKmDdrxFMYAzhvoi7GD9D3\/IfG5\/tg84XtUL3RLJPTK6DjldzUDDlp6pj98fzn\/IiNaH725t0J3poAp5hlkTteKnsOm3jxIAWfqHkbkP1s6pD6jE\/vVLReb9w8rlPgkskmAJGiLlxa4rqY+rgo3n9Th\/TfjK9tN2d5Tah1vM6DQW8KrsLTMSPN49p\/1IzYjlE\/WgKu7vLa1wekVDQeWwI+wXhPIuDfG8z1YdntqEkc1uwDo+P5X4ozYaFEU9Uc8xRTGjYW0se5TBH+GMt6VnE8mQJ4xjr1IEiXduJ5q33Whmv\/no7YBZttb2CQWesg3kudWG0Jq2SWaL3euKeT1ifTzRZpHeCZDGvWBfqGIzGhnjP6Cf8JDwljy5hcinoi1uEvbo8Tz1vOf0\/\/xeqssb0154L46LGnPzlLsEnoTkgoN93ipIn+RK02ZUmp5lwvIFRaZz\/5cor4Tv3o9WIakiukHgHmzZdRnxOxHnBFeLzZzGbeUf7FkUlsb3NFPV5MBGvOW3nkONCf\/OWOMYvyTqWVa5NMPwtLnlVPh\/RsBpviaR1PvH7pmffqYsaxGbKudLH4VMI\/cIVL8NwCP+apRF2kE9Kkd4rRwVJzZB3WOuKY6LeWiJ2jB4cQIoO2N7Fn9NZYCJFE25sQQogzBG9v671xNr9\/DQKOy9g+gG\/o45505lq+rPN644x+aMqu6PGc608ikRAiA9jeikfe2LzmI7UOGJs0B+hDwiGutDjb3wQgWJ9a\/n\/5kk+xn6vGk\/NMblen2BAhzgRme1uD2WKlXJ143hKezSl4e+jsTNFbcisKJTW3yRMifR21vQmxaxLbm3lvL0f4274A6CfyhnSa403\/uF5PZyK2HFIfJDVbVBynM5o60esC+gkGPQ9AhJlL1hsKFkJsDfkrlQ\/x4FlQ3Pb4rl4G11JAnMzrxeeOzYqiTy4vHqTIJQLia5Tm6RxeeqWZPZ\/vXz4zpnbYjAd+zLm4WFMfxHsdEEKsSPSrt+bjg3xSeI8ePgDnZR5zobqaJTRp6oxKBMS9MnHzyRSFjnldJueJv4z0bPPxZhWMH7JY0xI5lwwWQvQyfHsj8zbn8uJRn019MnXiaZWw2vlMrMVxWxJJQ\/3xDByOD\/8vDjwdEB+9jtFWrx0vhOjiFLc3Jm\/zMUoeg7pyj0VcaU9LD\/FAAefK5W32xxs0j4uWMs0ZdR1BjIl3KcmGCyHWhfnsrZhingLxJs2nQC0YzeudCo3jukIl42K9Uwllr7FTtSUUFCJM9miTC5P1QW0bp\/DmMoMT7H+i8GgrhBArot9aIoQQ4gzR9iaEEOIM0fYmhBDiDCF\/52T6Y4Orm8cXFw8SE8mka3yqQX58EsrbnLurz2ZGdfUMPnY6inkzqdfMsU0+4n130qghe4T8ycn0lbu6eXx5\/TCxw\/EZQWTCM954mrsUlp3v\/1gHznssCp\/FqYSOKbUrgLftnePtKjqey94ZuedrvR47X+TvIom\/1h3i6ubx32\/\/kdvhSAbe8M1dJ70tzRYhb5sxpJ+j1s8G7Mrb0oxpbO3tjWc\/TnbCO1v4fiG3tyXmA\/rwsjh1dfP49evXhx3ODDOlagPeFDDoSYG6mMF0jGmpWa\/ZnDpvSKc53vTP1AtOkXUVg816o\/0BdeH+YB3cHIBZuxfAjJthfH\/AFDAY6udwn8x4s6hcXqY0sR3R7a15+YvjN9vbYYd78uSDOgYsGj4vXqkMZjwjEoqpfZoiTJ+ZwnPHS+VQmc3gaF3elISO5w3XBYKZ4yhNHaaxZAqzP2S9xfSQbdKq6TPa\/6b\/9fTF8dlse3uzw\/34Jz998uSDZUy9qnhxfCq62sx4RiQRE6rXlCr6RvbHHCRTh\/rJiJh5cTl8vV7Y8ixTFwhmjqPMFdhPcxykMGeR9YJT\/Q6BT9Af0C4Qb+p7RdU6TOHiaEQ\/ewOX0zy13N4OO9ybz+HwamDE8anEaqungFyhLFEdIGueahae62czr4en2Zk3rZPI2wxmjqNEr2NzPBpJ1gtOhfSjPpvT+YsbWidM23uuu1iF6E9ORpd7sb3d3d09f\/634nM4k\/rsfB+c1\/PcxMvbLDkki7MkkjabQB6DoqL9bF6LaN4eHSa+ORHoAP3DSLppwE9zPBoJzEdbwfeH9xntP8iLOxkt1hSsdcSmJP7dmzk4ObfBcnu7u7v79ttvv\/nmm7\/89as336UEK9jLMllLCq\/g6PLCpYEwXtMswazFqwj3LT0O9Kd4P\/kUZF1DdCZuncwVzbz1MdA3ATqMn2YWpj84wKzIs0qmTvtMj2Mzubz1RL5esQoDf2uJeSEP29thb\/v6669fvXr1xRdPQ\/9aANxL4rzR5T4iuu\/ECTNqe\/Pe2rz\/gx\/Ve9vLly9fvHjx2Wd\/SOxwusfeKXTRj44ugThV1v6dk1c3j8297fb29vnz559++vvL64ejcgkhhBBv2WB7O+xtX3757M3ednn9cPnfqFxCCCHEWzbY3g5729WDH\/7yV7++vb29vH54cfm9USmEEEKIkg22t8PednHx4PLm0dvvSd48GpVCCCGEKNlgezvsbdM0XV6\/9+GHHz179uzy+j19ASeEEGIt1t7eLq8fHva2aZouLh5c3Tx6+vTpPH9yefP+qCxCCCHEPbb\/a92X1+\/N8yeff\/65tjchhBBrsf32Nl1cXd08urz+\/sXFzYpZhBBCvMscYXsTQggh1kbbmxBCiDNE25sQQogzRNubEEKIM0TbmxBCiDOE+Xtvy3j97nCG\/l+yfnJ\/iKTT5Hyffp20Qk9e7+Uo\/bXrSlyC9Yyt+pcK5orhKcYyyuT+Kx1J8691120duBqiOidxbZb9afbKOxsSGUg6EWkSxBwUOusF0\/vbiK\/X0v\/wS7b2MkgvOSZ47XXVqbzlLQZg7o5O\/T2UuR3e9gau\/ageRXVO4trgXtUPPq+oY917Wz5DwakeG0xL02Dxgs5cZOo1xEO5mOC0+fWqPtYt5rHB9d1DmUtWt5Te3mpnYNA75psO4kNXbhmJveFisT6THU\/x\/Ex+vbg5UR3POUgRyjtVeCWH6vV0cv4n65KZ\/mt9UEtnXbz\/Ot6ryyyK99n0A1J48d4sxg8\/XhwvI5m6zInN+Fp\/rhheb10RBtdbvwR5mynI+DCdX72BS4WP65dNmheMFCw8p\/3zJnlL5kjP8RSstzlST2emeJaaJffXm0gaOlUnZaym6zJLY\/rA+\/E0e46ZEaaoUd6mRVuYvjV1zLk4vkgNKiWT4rzNFF4k9s\/kPRp4e1tymBK6nEybSMz4RFuXFfX4500yME0GKZrXC5fJ+6l1PDUvL46v0+G6POdMRi9p8xQOBnNBQ8i6vGOvP3W6kJ\/mRGym1sR9wwaYehkFZrxoi1evdwr0wdQHfkDSUB+aKepIU78ogYk\/Gu\/yV2+MTlQf14ivfSgv30xsO+pnri63p9NsFyhhmS4kAuY228j46Zw7pC5Ph6mX9NPUZ46Z0qJ9aM5lqo5G4rxMP9N5vbPRvpGzQmZCfkidwexheyMrDOVidLzBgfpmyUAk3U+mz6RJ7Ke254kw7TJtDKw3rY9P1TG45\/OCsXWR8aZn5rjHs2eA9M83IeeH6U8zr3eqJ+8afWBSM\/pMjV4WJu9gottbUVtdttdT88pFy8P6jA4INn12XrbElSvS8fWa40y92GTdh8lqS6HGd6COH1Jv7bM+y+uDKpr98QZH1bU8VRwAG4nUXrDnp05dTOf70KyX1OGLqs2TPnN569L4PkTrBVNIHfMlLu046LeWCGEy9kbdz22\/Hyfngfq5X7S9CVEz6q3o3t7S7s3PqaN+7hptb0J46OElxAnjbG\/TPN\/7rx9PJ5qi009R11JqeMk7ARe1dr2n28+l7foYLx7Q6nrECw75BOKn2HwhBuBtb9PibhxyhwCR7be35vj5PRRG9X9s6j1j2sZ7XlONXGN8xxg\/J9p\/IXphtrdp5Ttky9uP2d7O8j2vtrco5I7FBNdfSDW\/mE50TNubEPdIbG\/gmzP1sRdfjDO335BvwjS3N14t1B9vfDlC9g37YfbvOj7dfyCy6vX1+kb6YRi1vQGf6dShWaHFjC9xPci7Xft+EaKk56s3vF5BMBPv0anjPf6W90xIqp7e9ANSJx6FwAyTlNRncoXWA6npxSxfMn3rXCfek9eLb9YFxEmH2E9CKrqezf4P1PdKiOYV7y6dX73xj49Rj1fvWZPAK4rUBLcreNKBcU8zVwsIyCUKXfeo\/qi+MY9jkmY88ziu62IudG5Jd+qk1zOZaO37RYiS6PaWfpz1P15xcGKhm48hXq3Zn2Ywk4usa+3+R697jz6T15sS7UPCUjMgWkvntuTNioqE1vPa+un7RYj\/E\/3JyeayI+\/5UdvbGo9p3lJdcuJxn3tMR+NPaHtbo289fkbp8\/FYgbmOifvLnNJ\/j9Qp1rhfCn0hpin1796Wg\/wTx1vZpo5JU4dc1s26oneI2QSybyDjSnX197\/2vwzA8T3+67xeMPbD9LNuWnO9YX1Sx0tanG3mxTpMybx+lJXul2KKEOirN8Gg20mcB9usZN0vYju0veXoefcqxN5Yez3rfhFHQNubEEKIM6T5oyWd33Y35w4k8ZaQ+eykFgQpQgZM5dwbW\/xxCzk9+hmSEEKcBvhHSw7Un\/FO3GO9\/nx4+EMzuruY\/vE2DFKEivL2kmaWZt7o2wimD9rhhBCny38BboJ8GWulW7wAAAAASUVORK5CYII=\" \/>\r\n\r\nHere we have written a really simple \"Employee\" class. We then instantiated it from within the Main method, by creating an object called \"Dave\". After the object has been created, we then populated it with data.\r\n\r\nHowever the above approach isn't best practice mainly because the fields' access modifiers was set to \"public\". This breaks one of the 5 pillars of OOP, called encapsulation, which requires that access to a class's field must be restricted so that only methods within the class can get\/set the field's value.\r\n\r\nIf we simply replace \"public\" with \"private\", then the the program will fail with the following errors:\r\n\r\n<img alt=\"\" src=\"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAocAAADeCAIAAADAaD2jAAAgAElEQVR4nO2dW69tyZGV14\/sFgi3JW5C0G4uQgjR\/iP+E9Ug6Kbtx\/lucRE0jV0G6sFWm5sLpO5yH2wfiYeSVuXJjBgxIjLnZc01vodS7pyRI0ZEzjVzr733WfX4wU8+\/uAnH7\/48uO3f++7DyGEEEIczocPH37605\/+\/Oc\/f+hUFkIIIc5Fp7IQQghxFU47lbeGA9J5BkI\/NZ9jMNbPGH8ZzJKZPpvdY8TBfNm\/N3\/wxhWS7udws5iXWmnxAhSKWtWHV+9n5x\/cIWvvn4vciie\/Vz6rBeau8+OUeKhzhftgOWbJZG\/xl6TOfFdNhbUpllgCkfs5HPdoodo9KBS1qg+v3s\/sQ3Jhvbu+ZMjIdzyV+ac8XuXFFPTB5Cu+usZH9kafym3V2X7iPmf7ifOaAXtDZgzvt8OcnKJ2EW5Z1FngZi5s9RVeL+6pjB+I5uNpvPQcew9EUj+sltcJlb2ArCVvhtef70M7M3oY57M62ExhHmSfz1XoJ5kLOzfzZufDoryOmeNuiTcP6Jab9fL62f54Y14H1wV0UnmZjAf43z5lJu8V5sdW8Doepr43zupvA1jHPpWBm06uG2\/OXetJmRZx3tAD1sGy5lW++4yIp5NKAdZ69XbZzfmCTrYWc3krDlLziWaaCWDS7TH2DBR0yqlNJ0+6hduwj1ifNOldWlWUZ2kP\/TDpjH5BZ6beVWPPf7hksm\/L\/eMUYd7gvbKn\/qRTfP6XLMDs5qifKhVfKixhruJIZhd5fW+t2bd2ZrTRzQOfng7wwwd0zs2rfJaZTmKYjMzYkwLxQKTrHpivWTXp4rvJDd5Ooz5p0rtU6AOuy9Txxil9JjueKeiE\/QT1MmZAH7JS3lVsDxcVNtATx2Ne3\/QM9IPfK4MWm+Pnf8PCQn2GMD7sxaQUGYmbgCfLW44vpe4SnCIUb28PcGOkUqfqMrMUqNUFjIFKs\/FeGJkiTI2ddJN8W1ImvUtMHxiyzcnqpwww86TOqrrK9uYFsT1QL8MB+24u8TRzP8EOx8\/\/ksWAbnrBTHzYwSU6ox+mzLAJob4Xaaph8XmdlCWyt2HqtfuVolzXzNjMXtMpLzGb2X7ZNSRVGmmy8zPZz7Eupgm8foFUH+Z1rjb2\/IdLJvu23D9IwejU\/9rLy2QmG6W2gXHeLMzzQ84zJj2foZ+CDnCYopAUF0U2YQ9LW7Qv2fm18HWN3nA8Oe+VnM3LzD+4+3w78DkQ1uX1zVQAxYJVjH6Kch8YnVFwjDfD+H7uMT8aG5eY8UDfI+wD2R8yBe7D7v8yKuX7hbhrXeLeePft3vfzWv2DX33j4\/iw1OIN2fdULnxDIYTYCe\/1uPfrdJX+ic8TPcrEYehzsIUQQoircPNTWd\/bfs313wadpS+EEJfiHU\/lqz3fV\/kBOnufaq+uL4QQF+Hmp\/LI1Z7vq\/ycW5dOZSGEWMJtT2XzJ5\/bAI7H4u2qTuQxHCSr\/BypE\/ZhbAijby7BebN+hBDiRbntqfw13mkBwsgDwFvyHLdnTHgaZcVJHe9qQR8zqR\/mTZkRQojXRadyMM8oj+PN+sfvZiJwCLWEJrH\/yVMzxNTH\/s2mdfFkdUIIcRt0KgfxTGR4mIGA1CEE7KXq4k9KT5DX98JSuXQqCyHehPc9lSdPo+WncvakZHRMAzV9DKn\/\/JKPL5gRQojX5ban8jYwXvLiC\/qhCHOJiZ\/RCa2OAUEXkvpAmamXtCSEEK\/LbU\/lvdEJIYQQYjk6lSvorZsQQog90KkshBBCXIXTTuXT3256v930glOyXl3kL1lnIH+5ewynpD6+5ELGvbfmmK2\/60+MblmUyftU+kKc\/F75rHvCO5K9o5Q0OZ6Ia\/VTBpaLg6S8n715ZjzlYD5m1U76NSepV0dB\/xTe6qx6q2Jfgnc8lb2ji59nlMcx0DEvpVJjEVKhwNVe0mf5efVTueyEXHi1+0S0aHcuhXsqpw6qbaCdf\/gHDKkPSPk0M4aXardsKjWIT\/UhO5\/tWze\/DSzR4evNNrmm8xyT9TJ9SLltFSb1GfOMvheP\/Wf745XTLcn2Z1ybqndGB5fmiZi5svWa8WYt4lzsUxncbU\/MGO8G8qT4u9yESQRSADVmnjRG6ky+KlLmC33zBFNFzeTl\/T\/BIjiveakdMCWEdZE+R815fVCvOcmMGf+MPqkDek5uEGOsoJOtC8SbdWXrBTpeyeJEgvfK44LtU9rJx6JTedT3ADHY\/6olC3UmXxVk0uwGdTrjvqSKYvJm9z3lJ3SIU7QDpoSwLt5t2\/luYO6Lp+\/Fg+VjfFiX5x9MFnTGMdmfMC9oDqlDltOZ73x6deF6gZ8xrGZY7Erwe+Xs3YlvjnHjZ25lJj51\/2Xns5ayl9oXUjm1t03kBoUx2CEIznpY4of06aVoB0wJYV2829pysv9Z\/ex+MfoFnXJ7swuZpDP7C8KYEkKfoRPSpziG3E+ww\/Hzv+SNS9797cx+r5bUCyDlZ5V+CE7ablOqb6AuU9PzU9APywQpQpj98hrIlBDWxbsNl8\/0n\/HMjBn\/q3SY5WG9XlKyb6v6E\/oMHZZ1SIfiSOp\/7fVwXmkP6+YYpbaBcb7ziv2Q84zJcN7zU9ABDmvgvOYlsyhQrFe1pxPmHQPIMj0nfEvDJcDb2BDektefrMmsfvulZzWlP+qEVZClYRGzKL4\/nu2wb2QfZuoKzWfrzTZBnMvu\/zLqrrt+17pEi3b5amhHxO3Z91TOfsMoxBXQfXtNtC\/iHdDnYAshhBBXQZ+DzfpJWSV\/35OVfS3MknEfvC3I9nNJVz2RU27dQtL9HG4W81IrLU4A\/FzKZ5aC+VX1vnTfHtxfYHSXZup9x0\/cHPO2X5qWUo0eI7H+q9+yJmbJXh\/AdoxfkjrzXQV3wqoUSyyByP0cjnu0UO1EzHt1vDqZYlKhnDebetW+XGd\/a+BHEBOf4h1PZf4p384wVr3I8FEOJl\/xbh4f2eOTDo\/beL6f5D7WqgB1HQaZMbzfDnNyitoMezs5sdLrNPkG4GZOtlqfg20Ljl9mLXkzng4ogU\/q7YvpwawrpYPNFOZB9vlchX6SubBzM292PizK65g57pZ484BuuVkvr5\/tjzfmdZi6Qp12xrvkTXrmGf+eTtgHpgOMDq\/G+J\/Je4X5sRW8jok+B9sVLPgBkeGu8Pp4rVdCl92cL+hkazGXt+IgNZ9oppkAJt0eY89AQaec2nTypFu4DfuI9UmT3qVdiwI+Rw\/Yj2eD8ekVPnrg6w1hmr+Tjhdz5NjzHy6Z7Js+BxtdGv2EloBO2RiZ0TTZzow2unng09MBfviAzrl5lc8y00kMk5EZe1IgHoh03QPzNasmXXw3ucHbadQnTXqXCn1g6mKutspMD835sF6zrodzKqfqxXj1TuqU6w3tmSJeakbKu4rt4aLCBupzsKekyEjcBDzJJAVh3qXQxszWeGvxjZFKnarLzFKgVhcwBirNxnthZIowNXbSTfJtSZn0LjF9IMFLQue1+OymeH0u1ItZ1Vhyf5nxEnvzgtgeqJdBn4NNxZN+mDLDJoT62BsoLUxa0ElZIvcoTM3o8PuVolzXzNjMXtMpLzGb2X7ZNSRVGmmy8zPZT6auDjI+bGbBsznehraDegt45rP6pM7Vxp7\/cMlk3\/Q52MgMVuOLCn2aDlMUkhYqTVktW9qifcnOr4Wva\/SG48l5r+RsXmb+wd3n24HPgbAur2+mAiPi+STjyby4rvZSuNzMm8Kst6AP+jaafzj1grxHzo\/GxiVmPNA30edgF7lrXeLeePft3vfzWn29+sSN0edgC\/EuZN8o7J33LB0hrow+B1sIIYS4Cjc\/lV\/lO+uXMHkA13+7dpa+EOJNuPmp\/Nj5Qb9QalS72vN9lR+g81q\/3TxeXwhxe3QqX0v2MP0sq\/ycW9e77ZoQ4uW47am8fUo7OY4fyZ9AbgM1HS9+lf4zzOxDe2m5nyN1wj6MDWH0zSU4b9aPEEJ03PNU9p6q2TGZIsxbUFulH5bZnjHhaZQVJ3W8qwv3a4l+mDdlRgghRnQqfzNuSaUI8xbUvOXZ535YcjsP\/IN6x74Bk9g\/SMqMQ0x97N9sWhdPVieEECE6lftxIUWYt6CGl\/PiqZJBQOoQAvZSdS3fO6aomVwpM0IIMaJTGY2ZFHucFgv1U8tBQMpPVsc0UNPHkPrPL\/n4ghkhhBi556n8iH5dCuazj\/guPquzDeyqH4owl5j4GZ3Q6hgQdCGpD5SZeklLQggxcttTWXyNTgghhHghdCrfGb11E0KI10KnshBCCHEVTjuVT38b5\/3W0AzjfYbx3aXlHSB\/aXoMp6Q+vuRCxr235pitv+tPYm5ZlMn7VPpCnPxe+ax7wjuSN+tPeMASoABSgCyT7CoOkvJ+9uaZ8ZSD+ZhVO+nXnPApXujp\/1Zn1VsV+xK846nsHV17n8peFk\/cC2ay48mFXO0lfZafVz+Vy07IhVe7T0SLdudSuKcyPqi6+W2gnX\/4BwypD0j5NDMyl8KrYXzXCka\/0IfsfLZvZlHhpawOX6+nzyjwOs8xWS\/Th5TbVmFSnzHP6Hvx2H+2P1453ZJsf8a1qXpndHBpnoiZK1uvGW\/WIs7FPpXB3fbEjPFuIE+Kv8tNmEQgBVDjLzHx2X4WSMkW+uYJYttkH9bu+xMsgvOal9oBU0JYF+lz1JzXB\/Wak8yY8c\/okzqg5+QGMcYKOtm6QLxZV7ZeoOOVLE4keK88Ltg+pZ18LDqVR30PEIP9r1pC6ox1LX9VkOazG+SVQNoGwQUPoQ65HDjEKdoBU0JYF++27Xw3MPfF0\/fiwfIxPqzL8w8mCzrjmOxPmBc0h9Qhy+nMdz69unC9wM8YVjMsdiX4vXL27sQ3x7jxM7cyE5+6\/5bcrAsttS+kcmpvm8gNCmOwQxCc9bDED+nTS9EOmBLCuni3teVk\/7P62f1i9As65fZmFzJJZ\/YXhDElhD5DJ6RPcQy5n2CH4+d\/yRuXvPvbmf1eLdjejB8+C9YPIUvI9g3UZWp6fgr6YZkgRQjOuzV0MWQbw7p4t+Hymf4znpkx43+VDrM8rNdLSvZtVX9Cn6HDsg7pUBxJ\/a+9Hs4r7WHdHKPUNjDOd16xH3KeMRnOe35wvOkKOKyB\/ZuXsMNufvQc6oR5Cw0BOqmWhkuAt7EhvCWvP1mTWf32S89qSn\/UCasgS8MiZlF8fzzbYd\/IPszUFZrP1pttgjiX3f9l1F13\/a51iRbt8tXQjojbs++pnP2GUYgroPv2mmhfxDugz8EWQgghroI+Bxv52QZ4cTPdKHLjb\/zDlnrBZvcYcTBf9u\/NH7xxtZtwJ4fj66Kc6JRmLuQA\/wXxVX5ed1++pvMPdmrtPk5KveMnbo552y+9cVk81Hz1W9\/ELJnsM\/6S1JnvqqmwNsUSSyByP4fjHi1Uezl29V8QX+XnfvuCK1pY74zUO57Ktac8r8zrA0utGm\/gIoyP7I0+lduqs\/3Efc72E+c1A\/aGzBjeb4c5OUXteHb1\/+rNuRS4mQtbPSOlz8G2BcngUIHXBCXwSb19MT2M81kdbKYwD7LP5yr0k8yFnZt5s\/NhUV7HzHG3xJsHdMvNenn9bH+8Ma+D68rqkPHtjHkJj\/fzT+psnzKT9wrzYyt4HQ9T3xt7+vocbFfwEW0hKTJK8asKGb16u+zmfEEnW4u5vBUHqflEM80EMOn2GHsGCjrl1KaTJ93CbdhHrE+a9C6tLQrHm\/NA3PPvtY60iuH7uVwnuxd7jD3\/4ZLJvq3yr8\/Bpi6FV3EkbkJW31tr9q2dGW1088CnpwP88AGdc\/Mqn2WmkxgmIzP2pEA8EOm6B+ZrVk26+G5yg7fTqE+a9C4V+sDUNc57Ol5FY3w7w\/cnS9jhmg4wCfrP2DNFvNSMlHcV28NFhQ1kNnQcj\/r6HOwpKTISNwFPMklBmHcptDGzNd5afGOkUqfqMrMUqNUFjIFKs\/FeGJkiTI2ddJN8W1ImvUtMH1Is3Jf5LSuwqiFkXfxGT9qbF8T2yM1i7M3059NT+fOPX3z58dvfebvPwa7pjH6YMsMmhPpepKmGxed1UpbI3oap1+5XinJdM2Mze02nvMRsZvtl15BUaaTJzs9kP8e6ajop\/+Zyr64yqX7O61xt7PkPl0z2bZX\/5lT+\/OP3P\/\/NF19+\/J3v6HOwbZ+hn4IOcJiikBQXRTZhD0tbtC\/Z+bXwdY3ecDw575WczcvMP7j7fDvwORDW5fXNVCDjvTJD\/218WNRYV5bQDylu6oyCY7wZNuY9cn40Ni4x44G+R9gHpj\/fnMrf\/\/w33\/\/xr7\/4xW++9bu\/z6Qn4et5Le5al7g33n279\/28Vv+ur7671iVSNKfyj3\/9xz\/61X\/737\/+1t\/7Z6vUs99oCCH2w3s97v06XaV\/1+fJXesSNb45lf\/4R7\/6oz\/98F\/\/16\/+2t\/9p2e7EkIIId6Rb07lf\/2f\/98f\/slX\/+V\/fvirf+efnO3qcujb2K+5\/tups\/SFEGIJ35zKf\/Snf\/kv\/8Of\/+R\/\/OVf+dv\/+GxXa9j791hXe76v8gN09j7VXl1fCCEm+eZU\/sP\/9Mt\/8e\/\/7+f\/\/avf\/lv\/6GxXC3i35\/sqP+fW9W67JoQQHc2p\/Cdf\/fN\/939+\/POvfvtv\/sOzXc2yDZiXslLL9Z9h3ZL2S0a\/4OdInbAPY0MYfXMJzpv1I4QQB\/PNqfyv\/uNf\/MG\/\/fJHf\/YXv\/U3\/sHZrhZgPn\/B0zyrtkrfW\/Ict2dMeBplxUkd72pBHzOpH+ZNmRFCiOP59FT+N7\/40Z\/9+W\/99b9\/tqsFpE6pgpq3PPvcx4fKZv3jdzMRqLclNIn9g6Sp0zGlj\/2bTeviyeqEEOJ0dCoX1VKnF6kc2gMBqUMI2EvVxZ+UniCv74WlcqXMCCHE8dz\/J9h7nBYL9VPLQUDKT1bHNFDTx5D6zy\/5+IIZIYQ4nuZUvtFfe33N+NR+OE9zRsQ7A9bqhyLMJSZ+Rie0OgYEXUjqA2WmXtKSEEIcz23\/ZdSroBNCCCHEkzt\/isj10Vs3IYQQLfrETSGEEOIqnPZ\/pzj9baL3W0kzjPcZxneXlneA\/KXsMZyS+viSCxn33ppjtv6uP+m5ZVEm71PpC7Hv\/8kx5Kx7wjuSN+tPhMASoABSgCyT7CoOkvJ+9uaZ8ZSD+ZhVO+nXnPApXujp\/1Zn1VsV+xI0p\/Lnv\/n+j3\/9xS9+863f\/f3D0p9yQ3hHFzYzfyqDLPwRTmZP2Z7hai\/ps\/y8+qlcdkIuvNp9Ilq0O5fim1P5B59\/\/P7nv\/niy4+\/853vPpL\/omYbaOcf\/gFD6gNSPs2MzKXwahjftYLRL\/QhO5\/tm1lUeCmrw9fr6TMKvM5zTNbL9CHltlWY1GfMM\/pePPaf7Y9XTrck259xbareGR1cmidi5srWa8abtYhzaU7ln3z8wecfv\/jy47e\/811wtz0xY7wbyJPi73ITJhFIAdTG+dQtW6hr8lWRki30zRPEtsk+rN13fr9AXvNSO2BKCOsifY6a8\/qgXnOSGTP+GX1SB\/Sc3CDGWEEnWxeIN+vK1gt0vJLFiXx6Kv\/k4xdffvz2733zXnlcsH1KO\/lYdCqP+h4gBvvPqoVXceRY1\/JXBVlvdoO8EkjbILjgIdQhlwOHOEU7YEoI6+Ldtp3vBua+ePpePFg+xod1ef7BZEFnHJP9CfOC5pA6ZDmd+c6nVxeuF\/gZw2qGxa64p\/LXZO9OfHOMGz9zKzPxqfsPq5HeFlpqX0gMobL5ssQbFMakmsbkZUou+yF9einaAVNCWBfvtrac7H9WP7tfjH5Bp9ze7EIm6cz+gjCmhNBn6IT0KY7BPpWzd+Fz\/PwveeOSd387s9+rBdub8cNnwfohZAnZvoG6TE3PT0E\/LBOkCMF5t4YuhmxjWBfvNlw+03\/GMzNm\/K\/SYZaH9XpJyb6t6k\/oM3RY1iEdiiMJfoI9blg7OQ7amC7ejBkveXm71KYOM8+Y9HyGfoCOpwYc1sB1mZeww25+9BzqhHkLDQE6qZaGS4C3sSG8Ja8\/WZNZ\/fZLz2pKf9QJqyBLwyJmUXx\/PNth38g+zNQVms\/Wm22COJfgJ9jz3HXX71qXaNEuXw3tiLg9+57K2W8YhbgCum+vifZFvAO7v1cWQgghBMlpp\/Lp3\/Zmf\/VC+gx\/r2NeqhZxacJWeMHmFjDiYL7s35s\/eOMKSfdzON7P5USnNBMD\/FzKZ5aC+VX1vnTfHtxfYHSXZuo9+b3yWbtldjm8lJIFmtjMPTDLJ\/sTbgGjM99VU2FtiiWWQOR+Dsc9Wqh2Iua9Ol6dTDGpUM6bTb1qX66zvzXwI4iJT\/GOp3LtKZ9VTumAR8Ar3s3jI3t80uFxG1\/bL28V30+c1wzYGzJj6t7b1ckpajPs7eTESq\/T5BuAmznZ6vq\/jBofT+Ol59h7IJL6gJRPMyOwlG2ut5bRASXwqb19Mf2M81kdvhZyHmSfz1XoJ5kLOzfzZufDoryOmeNuiTcP6Jab9fL62f54Y16HqSvUaWe8S96kZ57x7+mEfWA6wOjwaoz\/mbxXmB9bweuYfPjw4Yc\/\/OFnn31GfYqIl\/g53oYbFEt1M0ze0APWwbJmMN\/NR\/4uJI0xSU2ddmvMsHa+oJOtxVzeioPUfKKZZgKYdHuMPQMFnXJq08mTbuE27CPWJ016l3YtCvgcPWA\/ng3Gp1f46IGvN4Rp\/k46XsyRY89\/uGSybx8+fPjss89+9rOf6XOw063HClkDjD7Oa\/atnRntdfPAv6cD\/PABnXPzKp9lppMYJiMz9qRAPBDpugfma1ZNuvhucoO306hPmvQuFfrA1MVcbZWZHprzYb1mXQ\/nVE7Vi\/HqndQp1xvaM0W81IyUdxXbw0WFDfzw4cP3vve9X\/7yl+\/+OdjhJOONic9mZxoCwso2ZrbGW4tvjFTqVF1mlgK1uoAxUGk23gsjU4SpsZNukm9LyqR3iekDCV4SOq\/FZzfF63OhXsyqxpL7y4yX2JsXxPZAvQxfn8pfffXVW38Odk1nlR\/ToanvAfSx+LxOyhLZkzD1TJ9TVYyU65oZm9lrOuUlZjPbL7uGpEojTXZ+JvvJ1NVBxofNLHg2x9vQdlBvAc98Vp\/UudrY8x8umeybfSo\/F3v5Nv9uME2MUtvAOG+2xvNDzjMmPZ97+AEOU6TMM0WRTdjD0hbtS3Z+LXxdozccT857JWfzMvMP6z4fzWwHPgfCury+mQqMiOeTjCfz4rraS+FyM28Ks96CPujbaP7h1AvyHjk\/GhuXmPFA38Q9lVdB+ng57lqXuDfefbv3\/bxWX68+cWP2PZVT3yAIIXYl+0Zh77xn6QhxZXZ\/ryyEEEIIkpufyq\/ynfVLmDyA679dO0tfCPEm3PxUfuz8oF8oNapd7fm+yg\/Qea3fbh6vL4S4PTqVryV7mH6WVX7Orevddk0I8XLc9lTePqWdHMeP5E8gt4Gajhe\/Sv8ZZvahvbTcz5E6YR\/GhjD65hKcN+tHCCE67nkqe0\/V7JhMEeYtqK3SD8tsz5jwNMqKkzre1YX7tUQ\/zJsyI4QQIzqVvxm3pFKEeQtq3vLscz8suZ0H\/kG9Y9+ASewfJGXGIaY+9m82rYsnqxNCiBCdyv24kCLMW1DDy3nxVMkgIHUIAXupupbvHVPUTK6UGSGEGNGpjMZMij1Oi4X6qeUgIOUnq2MaqOljSP3nl3x8wYwQQozc81R+RL8uBfPZR3wXn9XZBnbVD0WYS0z8jE5odQwIupDUB8pMvaQlIYQYue2pLL5GJ4QQQrwQOpXvjN66CSHEa6FTWQghhLgKp53Kp7+N835raIbxPsP47tLyDpC\/ND2GU1IfX3Ih495bc8zW3\/UnMbcsyuR9Kn0hTn6vfNY94R3Jm\/UnPGAJUAApQJZJdhUHSXk\/e\/PMeMrBfMyqnfRrTvgUL\/T0f6uz6q2KfQne8VT2jq69T2UviyfuBTPZ8eRCrvaSPsvPq5\/KZSfkwqvdJ6JFu3Mp3FMZH1Td\/DbQzj\/8A4bUB6R8mhmZS+HVML5rBaNf6EN2Pts3s6jwUlaHr9fTZxR4neeYrJfpQ8ptqzCpz5hn9L147D\/bH6+cbkm2P+PaVL0zOrg0T8TMla3XjDdrEedin8rgbntixng3kCfF3+UmTCKQAqjxl5j4bD8LpGQLffMEsW2yD2v3\/QkWwXnNS+2AKSGsi\/Q5as7rg3rNSWbM+Gf0SR3Qc3KDGGMFnWxdIN6sK1sv0PFKFicSvFceF2yf0k4+Fp3Ko74HiMH+Vy0hdca6lr8qSPPZDfJKIG2D4IKHUIdcDhziFO2AKSGsi3fbdr4bmPvi6XvxYPkYH9bl+QeTBZ1xTPYnzAuaQ+qQ5XTmO59eXbhe4GcMqxkWuxL8Xjl7d+KbY9z4mVuZiU\/df0tu1oWW2hdSObW3TeQGhTHYIQjOeljih\/TppWgHTAlhXbzb2nKy\/1n97H4x+gWdcnuzC5mkM\/sLwpgSQp+hE9KnOIbcT7DD8fO\/5I1L3v3tzH6vFmxvxg+fBeuHkCVk+wbqMjU9PwX9sEyQIgTn3Rq6GLKNYV2823D5TP8Zz8yY8b9Kh1ke1uslJfu2qj+hz9BhWYd0KI6k\/tdeD+eV9rBujlFqGxjnO6\/YDznPmAznPT843nQFHNbA\/s1L2GE3P3oOdcK8hYYAnVRLwyXA29gQ3pLXn6zJrH77pWc1pT\/qhFWQpWERsyi+P57tsG9kH2bqCs1n6802QZzL7v8y6q67fte6RIt2+WpoR8Tt2fdUzn7DKMQV0H17TbQv4h3Q52ALIYQQV0Gfgx37KfjEv+8xr2J7d8Lsg9ecWt+wzhL\/3vzBG1dIup\/DzWJeaqXFC1AoalUfXr2fnX9wh6y9fw6+Fd\/xEzfHvO2X4FJNPNTEN1Yq9fUxW+31P9s3Rme+q6bC2hRLLIHI\/RyOe7RQ7R4seaQclvpS4Jc8E78w9X6846lce5rzyoz+9umf7HpZzEu7Pj7TXWkAAA40SURBVFV3ZXxkt30YY7J943XGVXw\/cV4zYG\/IjLgPRzo5Re0i3LKos8DNXNjqI3dNn4NtC5LBoUI3A7qXVZvpTzsz1jvOZ3X4Wsj5JX3z5gv9JHNh52be7HxYlNcxc9wt8eYB3XKzXl4\/2x9vzOvguoBOKi+T8QD\/26fM5L3C\/NgKXsfD1PfGBX0TfQ62K\/iItpwUecD+ZC2lYPrQVWfOF3SytZjLy33zLs00E8Ck22PsGSjolFObTp50C7dhH7E+adK7tKooz9Ie+mHSGf2Czky9q8ae\/3DJZN+W+yfR52CjS7Uuezptl8aqeTUe0E\/PjzkP+gDqKtTiiaf6lp2fh8nIjD0pEA9Euu6B+ZpVky6+m9zg7TTqkya9S4U+4LpMHW+c0mey45mCTthPUC9jBvQhK+VdxfZwUWEDPXE85vU99DnY7CTvzSvTkwLKwBVjJquMM5oBqS3z1nr6hb6l6jKzFKjVBYyBSrPxXhiZIkyNnXSTfFtSJr1LTB8Yss3J6qcMMPOkzqq6yvbmBbE9UC\/DWfuuz8Gu64x+CmV6DsN58xJQmEla0ElZInsepmZ0vFWpKkbKdc2Mzew1nfISs5ntl11DUqWRJjs\/k\/0c62KawOsXSPVhXudqY89\/uGSyb8v9k+hzsJGZrB9Sh89rOk+RKooplmzOHpbCvmXn18LXNXrD8eS8V3I2LzP\/4O7\/7cDnQ1iX1zdTARQLVjH6Kcp9YHRGwTHeDOP7ucf8aGxcYsYDfY+wD2R\/UuhzsIvctS7xnnj38973+Vr9g1+V4+P4sNTixuhzsIV4d7zX6d6v31X6Jz5n9IgTy9HnYAshhBBXQacyhb4X\/prrv206S18IIZZw51N5799XXe35vsoP0Nn7VHt1fSGEmOS2p\/K7Pd9X+Tm3rnfbNSGE6LjnqbwNmJeyUsv1n2HdkvZLRr\/g50idsA9jQxh9cwnOm\/UjhBAHc89T+UH8m8LUA9o7Leb1vSXPcXvGhKdRVpzU8a4W9DGT+mHelBkhhDgencpFNW959rmPD5XN+sfyZiJQb0toEvsHSVOnY0of+zeb1sWT1QkhxOnoVC6qpU4vUjm0BwJShxCwl6qLPyk9QV7fC0vlSpkRQojjuf+pvMdpsVA\/tRwEpPxkdUwDNX0Mqf\/8ko8vmBFCiOO57an8+PSHwOMk+XTeBnbVD0WYS0z8jE5odQwIupDUB8pMvaQlIYQ4njufyi+BTgghhBBPdCqfid66CSGEaNGpLIQQQlyF007l098mer+V9IJTsl5d5C9HZyB\/KXsMp6Q+vuRCxr235pitv+tPem5ZlMn7VPpCnPxe+ax7wjuSvaOUNDmeiGv1UwaWi4OkvJ+9eWY85WA+ZtVO+jUnqVdHQf8U3uqseqtiX4J3PJW9o4ufZ5THMdAxL6VSYxFSocDVXtJn+Xn1U7nshFx4tftEtGh3LoV7KqcOqm2gnX\/4BwypD0j5NDOGl2q3bCo1iE\/1ITuf7Vs3vw0s0eHrzTa5pvMck\/UyfUi5bRUm9RnzjL4Xj\/1n++OV0y3J9mdcm6p3RgeX5omYubL1mvFmLeJc7FMZ3G1PzBjvBvKk+LvchEkEUgA1Zp40RupMvipS5gt98wRTRc3k5f0\/wSI4r3mpHTAlhHWRPkfNeX1QrznJjBn\/jD6pA3pObhBjrKCTrQvEm3Vl6wU6XsniRIL3yuOC7VPayceiU3nU9wAx2P+qJQt1Jl8VZNLsBnU6476kimLyZvc95Sd0iFO0A6aEsC7ebdv5bmDui6fvxYPlY3xYl+cfTBZ0xjHZnzAvaA6pQ5bTme98enXheoGfMaxmWOxK8Hvl7N2Jb45x42duZSY+df9l57OWspfaF1I5tbdN5AaFMdghCM56WOKH9OmlaAdMCWFdvNvacrL\/Wf3sfjH6BZ1ye7MLmaQz+wvCmBJCn6ET0qc4htxPsMPx87\/kjUve\/e3Mfq+W1Asg5WeVfghO2m5Tqm+gLlPT81PQD8sEKUKY\/fIayJQQ1sW7DZfP9J\/xzIwZ\/6t0mOVhvV5Ssm+r+hP6DB2WdUiH4kjqf+31cF5pD+vmGKW2gXG+84r9kPOMyXDe81PQAQ5r4LzmJbMoUKxXtacT5h0DyDI9J3xLwyXA29gQ3pLXn6zJrH77pWc1pT\/qhFWQpWERsyi+P57tsG9kH2bqCs1n6802QZzL7v8y6q67fte6RIt2+WpoR8Tt2fdUzn7DKMQV0H17TbQv4h3Q52ALIYQQV0Gfgx37Kfj0gvn5G78hSP3qa\/uUUYoRB\/Nl\/978wRtXSLqfw81iXmqlxaM4wH9BfJWf192Xr+n8g5065T58x0\/cHPO2X4JLNfHl8y+N2Wqv\/3gvxv4wOvNdNRXWplhiCUTu53Dco4VqL8eu\/hc+mg5IfSnwo4OJ35V3PJVrT3Ne2dPn54HVdhVv7CKMj+yNPpXbqnE\/+fGoXKgC1HUYZEbchyOdnKJ2PLv6f\/XmXArczINbrc\/BtgXJ4FBhZt67Ot+fdmasd5zP6vC1kPMg+3yuQj\/JXNi5mTc7Hxbldcwcd0u8eUC33KyX18\/2xxvzOriurA4Z386Yl\/B4P\/+kzvYpM3mvMD+2gtdZgj4H2xV8RFtFipTnmau8E68PXXXmfEEnW4u5vBUHqflEM80EMOn2GHsGCjrl1KaTJ93CbdhHrE+a9C6tLQrHm\/NA3PPvtY60iuH7uVwnuxd7jD3\/4ZJVfSPR52CjS7XuZ1Nj5ZldB\/1sZ8Yyu3nQB0+nVosnbuqv7fMMTEZm7EmBeCDSdQ\/M16yadPHd5AZvp1GfNOldKvSBqWuc93S8isb4dobvT5awwzUdYBL0n7FninipGSnvKraHi5rclBF9DjY7yXvL3ihAGbhizGSVcUYzILVl3lp8w6RSl5vMVxGKk3UBY6DSbLwXRqYIU2Mn3STflpRJ7xLThxQL92V+ywqsaghZF7\/Rk\/bmBbE9crNWoc\/BruuMfkDG5fPmJaAASg6TFnRSlsieh6nX7mOKcl0zYzN7Tae8xGxm+2XXkFRppMnOz2Q\/x7pqOin\/5nKvrjKpfs7rXG3s+Q+XrOobiT4HG5nJ+mGKSuU1nadIFcUUSzZnD0th37Lza+HrGr3heHLeKzmbl5l\/cPf\/duDzIazL65upQMZ7ZYb+2\/iwqLGuLKEfUtzUGQXHeDNszHvk\/GhsXGLGA\/0l6HOwi9y1LvGeePfz3vf5Wv27virvWpcw0edgC\/HuZN9w7J33LJ2rcde6BEafgy2EEEJchZufyq\/yneZLmDyA678tO0tfCPEm3PxUfuz8oF8oNapd7fm+yg\/Q2ftUe3V9IcTt0al8LdnD9LOs8nNuXe+2a0KIl+O2p\/L2Ke3kOH4kfwK5DdR0vPhV+s8wsw\/tpeV+jtQJ+zA2hNE3l+C8WT9CCNFxz1PZe6pmx2SKMG9BbZV+WGZ7xoSnUVac1PGuLtyvJfph3pQZIYQY0an8zbgllSLMW1Dzlmef+2HJ7TzwD+od+wZMYv8gKTMOMfWxf7NpXTxZnRBChOhU7seFFGHeghpezounSgYBqUMI2EvVtXzvmKJmcqXMCCHEiE5lNGZS7HFaLNRPLQcBKT9ZHdNATR9D6j+\/5OMLZoQQYuSep\/Ij+nUpmM8+4rv4rM42sKt+KMJcYuJndEKrY0DQhaQ+UGbqJS0JIcTIbU9l8TU6IYQQ4oXQqXxn9NZNCCFeC53KQgghxFU47VQ+\/W2c91tDM4z3GcZ3l5Z3gPyl6TGckvr4kgsZ996aY7b+rj+JuWVRJu9T6Qtx8nvls+4J70jerD\/hAUuAAkgBskyyqzhIyvvZm2fGUw7mY1btpF9zwqd4oaf\/W51Vb1XsS\/COp7J3dGEz86cyyMIf4WT2lO0ZrvaSPsvPq5\/KZSfkwqvdJ6JFu3Mp3FPZO0LM+W2gnX\/4BwypD0j5NDMyl8KrYXzXCka\/0IfsfLZvZlHhpawOX6+nzyjwOs8xWS\/Th5TbVmFSnzHP6Hvx2H+2P1453ZJsf8a1qXpndHBpnoiZK1uvGW\/WIs7FPpXB3fbEjPFuIE+Kv8tNmEQgBVAb51O3bKGuyVdFSrbQN08Q2yb7sHbf+f0Cec1L7YApIayL9DlqzuuDes1JZsz4Z\/RJHdBzcoMYYwWdbF0g3qwrWy\/Q8UoWJxK8Vx4XbJ\/STj4WncqjvgeIwf6zauFVHDnWtfxVQdab3SCvBNI2CC54CHXI5cAhTtEOmBLCuni3bee7gbkvnr4XD5aP8WFdnn8wWdAZx2R\/wrygOaQOWU5nvvPp1YXrBX7GsJphsSvB75Wzdye+OcaNn7mVmfjU\/YfVSG8LLbUvJIZQ2XxZ4g0KY1JNY\/IyJZf9kD69FO2AKSGsi3dbW072P6uf3S9Gv6BTbm92IZN0Zn9BGFNC6DN0QvoUx5D7CXY4fv6XvHHJu7+d2e\/Vgu3N+OGzYP0QsoRs30Bdpqbnp6AflglShOC8W0MXQ7YxrIt3Gy6f6T\/jmRkz\/lfpMMvDer2kZN9W9Sf0GTos65AOxZHU\/9rr4bzSHtbNMUptA+N85xX7IecZk57P0A\/Q8dSAwxq4LvMSdtjNj55DnTBvoSFAJ9XScAnwNjaEt+T1J2syq99+6VlN6Y86YRVkaVjELIrvj2c77BvZh5m6QvPZerNNEOey+7+Muuuu37Uu0aJdvhraEXF79j2Vs98wCnEFdN9eE+2LeAf0OdhCCCHEVcj9XnmzAOrm8oXuC984e85xUSBFyoCpXPv2H2xNSmSVHyGEEPPU\/wZ7\/HKkfb7v9KzPHoqFukCKVFFjJPDASDG1HONHCCHEEg46lVvWFrD8VG59Ytt8UV4kPgU98VEtq8M432OzhBBCYJ6n8v8HGO8zyCXznvYAAAAASUVORK5CYII=\" \/>\r\n\r\n\"private\" means that only methods within the class itself can read\/modify (aka get\/set) the field. We are allowed to make these methods public, so that we can call these methods from outside the class....which is what we do in the next approach.\r\n<h3>2nd Approach : Access\/Modify (private) fields via the use of (public) methods.<\/h3>\r\nWriting the code like above isn't best practice. That's because a class should be encapsulated. hence a class's internal fields should not be readable\/writeable directly. In other words the fields need to be set to \"private\", and we access\/modify these fields using methods.\r\n\r\nTo make this possible, what we could do is write a method for setting a field's value, and another method for getting a field's value. That means we will end up creating 2 methods per field, and since we have 3 fields in the Employee class, it means   that we will have to write (3*2) 6 methods altogether.\r\n\r\ni.e:\r\n\r\n[csharp]\r\n\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nclass Employee\r\n{\r\n    private int age;\r\n    private string firstname;\r\n    private double salary;\r\n\r\n    public string GetFirstname()\r\n    {\r\n        return firstname;\r\n    }\r\n\r\n    public int GetAge()\r\n    {\r\n        return age;\r\n    }\r\n\r\n    public double GetSalary()\r\n    {\r\n        return salary;\r\n    }\r\n\r\n    public void SetFirstname(string ProvidedName)\r\n    {\r\n        firstname = ProvidedName;\r\n    }\r\n\r\n    public void SetAge(int ProvidedAge)\r\n    {\r\n        age = ProvidedAge;\r\n    }\r\n\r\n    public void SetSalary(double ProvidedSalary)\r\n    {\r\n        salary = ProvidedSalary;\r\n    }\r\n}\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        Employee Dave = new Employee();\r\n\r\n        Dave.SetAge(50);\r\n        Dave.SetFirstname(&quot;David&quot;);\r\n        Dave.SetSalary(35461.32);\r\n\r\n        Console.WriteLine(&quot;{0} is {1} years old and earns \u00a3{2} per year.&quot;, Dave.GetFirstname(), Dave.GetAge(), Dave.GetSalary());\r\n    }\r\n}\r\n\r\n[\/csharp]\r\n\r\nThis again will output:\r\n\r\n<img alt=\"\" src=\"data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAkoAAABNCAIAAADW29xfAAAPO0lEQVR4nO2dz44dRxXGe\/5ZLFGsGPMKrBFvwGPwBjwBT+JNdrBCQkEoyraVXcQigojIwaBIFoyQFxaWiIhIRmZhc+mpOuer75yq7tv3+vspivpWn\/rOd05Xd92ZO56ZfvPZP3\/7x3\/97k\/\/\/ujpfz7+8ruP\/\/zdVy\/vfvbzX0xCCCHE6aLtTQghxBmi7U0IIcQZ4m1v8zzP83wIK16aI0dk\/h8D1QrlOkUoY60JAsZimk9MObzkpRKpo3grc1frM8EG\/skU3vpn4hkdLO7dKdH+JHSAT96\/OCZ4e5sXjzNzsR7DcknhsziVVjNHzJUdlTVnrd3PfqugzyGdsXjK+1mfObZZD80U0QXfXDzFS7xI8EhuSZM6RX9y\/sWRaW5vS45t1sbzlvAMFroXQGY5+m2Q8DlVtzG\/Hjydzdjzij06\/E1dr1u+q96a93TMGHC78f6jOvUsz3\/Uj9iUxPaGV0wx7i2FqE5zvKjLMw\/wwpormNEHIol+hnR4kzjscCpar3kKmDdrxFMYAzhvoi7GD9D3\/IfG5\/tg84XtUL3RLJPTK6DjldzUDDlp6pj98fzn\/IiNaH725t0J3poAp5hlkTteKnsOm3jxIAWfqHkbkP1s6pD6jE\/vVLReb9w8rlPgkskmAJGiLlxa4rqY+rgo3n9Th\/TfjK9tN2d5Tah1vM6DQW8KrsLTMSPN49p\/1IzYjlE\/WgKu7vLa1wekVDQeWwI+wXhPIuDfG8z1YdntqEkc1uwDo+P5X4ozYaFEU9Uc8xRTGjYW0se5TBH+GMt6VnE8mQJ4xjr1IEiXduJ5q33Whmv\/no7YBZttb2CQWesg3kudWG0Jq2SWaL3euKeT1ifTzRZpHeCZDGvWBfqGIzGhnjP6Cf8JDwljy5hcinoi1uEvbo8Tz1vOf0\/\/xeqssb0154L46LGnPzlLsEnoTkgoN93ipIn+RK02ZUmp5lwvIFRaZz\/5cor4Tv3o9WIakiukHgHmzZdRnxOxHnBFeLzZzGbeUf7FkUlsb3NFPV5MBGvOW3nkONCf\/OWOMYvyTqWVa5NMPwtLnlVPh\/RsBpviaR1PvH7pmffqYsaxGbKudLH4VMI\/cIVL8NwCP+apRF2kE9Kkd4rRwVJzZB3WOuKY6LeWiJ2jB4cQIoO2N7Fn9NZYCJFE25sQQogzBG9v671xNr9\/DQKOy9g+gG\/o45505lq+rPN644x+aMqu6PGc608ikRAiA9jeikfe2LzmI7UOGJs0B+hDwiGutDjb3wQgWJ9a\/n\/5kk+xn6vGk\/NMblen2BAhzgRme1uD2WKlXJ143hKezSl4e+jsTNFbcisKJTW3yRMifR21vQmxaxLbm3lvL0f4274A6CfyhnSa403\/uF5PZyK2HFIfJDVbVBynM5o60esC+gkGPQ9AhJlL1hsKFkJsDfkrlQ\/x4FlQ3Pb4rl4G11JAnMzrxeeOzYqiTy4vHqTIJQLia5Tm6RxeeqWZPZ\/vXz4zpnbYjAd+zLm4WFMfxHsdEEKsSPSrt+bjg3xSeI8ePgDnZR5zobqaJTRp6oxKBMS9MnHzyRSFjnldJueJv4z0bPPxZhWMH7JY0xI5lwwWQvQyfHsj8zbn8uJRn019MnXiaZWw2vlMrMVxWxJJQ\/3xDByOD\/8vDjwdEB+9jtFWrx0vhOjiFLc3Jm\/zMUoeg7pyj0VcaU9LD\/FAAefK5W32xxs0j4uWMs0ZdR1BjIl3KcmGCyHWhfnsrZhingLxJs2nQC0YzeudCo3jukIl42K9Uwllr7FTtSUUFCJM9miTC5P1QW0bp\/DmMoMT7H+i8GgrhBArot9aIoQQ4gzR9iaEEOIM0fYmhBDiDCF\/52T6Y4Orm8cXFw8SE8mka3yqQX58EsrbnLurz2ZGdfUMPnY6inkzqdfMsU0+4n130qghe4T8ycn0lbu6eXx5\/TCxw\/EZQWTCM954mrsUlp3v\/1gHznssCp\/FqYSOKbUrgLftnePtKjqey94ZuedrvR47X+TvIom\/1h3i6ubx32\/\/kdvhSAbe8M1dJ70tzRYhb5sxpJ+j1s8G7Mrb0oxpbO3tjWc\/TnbCO1v4fiG3tyXmA\/rwsjh1dfP49evXhx3ODDOlagPeFDDoSYG6mMF0jGmpWa\/ZnDpvSKc53vTP1AtOkXUVg816o\/0BdeH+YB3cHIBZuxfAjJthfH\/AFDAY6udwn8x4s6hcXqY0sR3R7a15+YvjN9vbYYd78uSDOgYsGj4vXqkMZjwjEoqpfZoiTJ+ZwnPHS+VQmc3gaF3elISO5w3XBYKZ4yhNHaaxZAqzP2S9xfSQbdKq6TPa\/6b\/9fTF8dlse3uzw\/34Jz998uSDZUy9qnhxfCq62sx4RiQRE6rXlCr6RvbHHCRTh\/rJiJh5cTl8vV7Y8ixTFwhmjqPMFdhPcxykMGeR9YJT\/Q6BT9Af0C4Qb+p7RdU6TOHiaEQ\/ewOX0zy13N4OO9ybz+HwamDE8anEaqungFyhLFEdIGueahae62czr4en2Zk3rZPI2wxmjqNEr2NzPBpJ1gtOhfSjPpvT+YsbWidM23uuu1iF6E9ORpd7sb3d3d09f\/634nM4k\/rsfB+c1\/PcxMvbLDkki7MkkjabQB6DoqL9bF6LaN4eHSa+ORHoAP3DSLppwE9zPBoJzEdbwfeH9xntP8iLOxkt1hSsdcSmJP7dmzk4ObfBcnu7u7v79ttvv\/nmm7\/89as336UEK9jLMllLCq\/g6PLCpYEwXtMswazFqwj3LT0O9Kd4P\/kUZF1DdCZuncwVzbz1MdA3ATqMn2YWpj84wKzIs0qmTvtMj2Mzubz1RL5esQoDf2uJeSEP29thb\/v6669fvXr1xRdPQ\/9aANxL4rzR5T4iuu\/ECTNqe\/Pe2rz\/gx\/Ve9vLly9fvHjx2Wd\/SOxwusfeKXTRj44ugThV1v6dk1c3j8297fb29vnz559++vvL64ejcgkhhBBv2WB7O+xtX3757M3ednn9cPnfqFxCCCHEWzbY3g5729WDH\/7yV7++vb29vH54cfm9USmEEEKIkg22t8PednHx4PLm0dvvSd48GpVCCCGEKNlgezvsbdM0XV6\/9+GHHz179uzy+j19ASeEEGIt1t7eLq8fHva2aZouLh5c3Tx6+vTpPH9yefP+qCxCCCHEPbb\/a92X1+\/N8yeff\/65tjchhBBrsf32Nl1cXd08urz+\/sXFzYpZhBBCvMscYXsTQggh1kbbmxBCiDNE25sQQogzRNubEEKIM0TbmxBCiDOE+Xtvy3j97nCG\/l+yfnJ\/iKTT5Hyffp20Qk9e7+Uo\/bXrSlyC9Yyt+pcK5orhKcYyyuT+Kx1J8691120duBqiOidxbZb9afbKOxsSGUg6EWkSxBwUOusF0\/vbiK\/X0v\/wS7b2MkgvOSZ47XXVqbzlLQZg7o5O\/T2UuR3e9gau\/ageRXVO4trgXtUPPq+oY917Wz5DwakeG0xL02Dxgs5cZOo1xEO5mOC0+fWqPtYt5rHB9d1DmUtWt5Te3mpnYNA75psO4kNXbhmJveFisT6THU\/x\/Ex+vbg5UR3POUgRyjtVeCWH6vV0cv4n65KZ\/mt9UEtnXbz\/Ot6ryyyK99n0A1J48d4sxg8\/XhwvI5m6zInN+Fp\/rhheb10RBtdbvwR5mynI+DCdX72BS4WP65dNmheMFCw8p\/3zJnlL5kjP8RSstzlST2emeJaaJffXm0gaOlUnZaym6zJLY\/rA+\/E0e46ZEaaoUd6mRVuYvjV1zLk4vkgNKiWT4rzNFF4k9s\/kPRp4e1tymBK6nEybSMz4RFuXFfX4500yME0GKZrXC5fJ+6l1PDUvL46v0+G6POdMRi9p8xQOBnNBQ8i6vGOvP3W6kJ\/mRGym1sR9wwaYehkFZrxoi1evdwr0wdQHfkDSUB+aKepIU78ogYk\/Gu\/yV2+MTlQf14ivfSgv30xsO+pnri63p9NsFyhhmS4kAuY228j46Zw7pC5Ph6mX9NPUZ46Z0qJ9aM5lqo5G4rxMP9N5vbPRvpGzQmZCfkidwexheyMrDOVidLzBgfpmyUAk3U+mz6RJ7Ke254kw7TJtDKw3rY9P1TG45\/OCsXWR8aZn5rjHs2eA9M83IeeH6U8zr3eqJ+8afWBSM\/pMjV4WJu9gottbUVtdttdT88pFy8P6jA4INn12XrbElSvS8fWa40y92GTdh8lqS6HGd6COH1Jv7bM+y+uDKpr98QZH1bU8VRwAG4nUXrDnp05dTOf70KyX1OGLqs2TPnN569L4PkTrBVNIHfMlLu046LeWCGEy9kbdz22\/Hyfngfq5X7S9CVEz6q3o3t7S7s3PqaN+7hptb0J46OElxAnjbG\/TPN\/7rx9PJ5qi009R11JqeMk7ARe1dr2n28+l7foYLx7Q6nrECw75BOKn2HwhBuBtb9PibhxyhwCR7be35vj5PRRG9X9s6j1j2sZ7XlONXGN8xxg\/J9p\/IXphtrdp5Ttky9uP2d7O8j2vtrco5I7FBNdfSDW\/mE50TNubEPdIbG\/gmzP1sRdfjDO335BvwjS3N14t1B9vfDlC9g37YfbvOj7dfyCy6vX1+kb6YRi1vQGf6dShWaHFjC9xPci7Xft+EaKk56s3vF5BMBPv0anjPf6W90xIqp7e9ANSJx6FwAyTlNRncoXWA6npxSxfMn3rXCfek9eLb9YFxEmH2E9CKrqezf4P1PdKiOYV7y6dX73xj49Rj1fvWZPAK4rUBLcreNKBcU8zVwsIyCUKXfeo\/qi+MY9jkmY88ziu62IudG5Jd+qk1zOZaO37RYiS6PaWfpz1P15xcGKhm48hXq3Zn2Ywk4usa+3+R697jz6T15sS7UPCUjMgWkvntuTNioqE1vPa+un7RYj\/E\/3JyeayI+\/5UdvbGo9p3lJdcuJxn3tMR+NPaHtbo289fkbp8\/FYgbmOifvLnNJ\/j9Qp1rhfCn0hpin1796Wg\/wTx1vZpo5JU4dc1s26oneI2QSybyDjSnX197\/2vwzA8T3+67xeMPbD9LNuWnO9YX1Sx0tanG3mxTpMybx+lJXul2KKEOirN8Gg20mcB9usZN0vYju0veXoefcqxN5Yez3rfhFHQNubEEKIM6T5oyWd33Y35w4k8ZaQ+eykFgQpQgZM5dwbW\/xxCzk9+hmSEEKcBvhHSw7Un\/FO3GO9\/nx4+EMzuruY\/vE2DFKEivL2kmaWZt7o2wimD9rhhBCny38BboJ8GWulW7wAAAAASUVORK5CYII=\" \/>\r\n\r\nAs you can see, we have added a lot more code but the output is still the same. However this second approach, while better, isn't best practice either. That's because:\r\n<ul>\r\n\t<li>A method is designed to do a lot more then setting\/getting a variable info. Creating methods solely for setting\/getting fields values  overkill.<\/li>\r\n\t<li>This approach has a lot more of an overhead in terms of lines of code.<\/li>\r\n\t<li>Setting\/Getting fields via methods, means that the code has become a little harder to read. For example we now have to write \"Dave.age(20)\" which is harder to follow. It would have been better we could just do \"Dave.age=20;\"<\/li>\r\n<\/ul>\r\nThat is why there is an even better approach....which is to use \"properties\". I'll cover this in the next lesson.\r\n\r\n&nbsp;\";s:10:\"post_title\";s:52:\"c# - Storing data inside objects (by using \"fields\")\";s:12:\"post_excerpt\";s:0:\"\";s:11:\"post_status\";s:7:\"publish\";s:14:\"comment_status\";s:4:\"open\";s:11:\"ping_status\";s:4:\"open\";s:13:\"post_password\";s:0:\"\";s:9:\"post_name\";s:45:\"c-storing-data-inside-objects-by-using-fields\";s:7:\"to_ping\";s:0:\"\";s:6:\"pinged\";s:0:\"\";s:13:\"post_modified\";s:19:\"2014-05-10 17:27:10\";s:17:\"post_modified_gmt\";s:19:\"2014-05-10 16:27:10\";s:21:\"post_content_filtered\";s:0:\"\";s:11:\"post_parent\";i:0;s:4:\"guid\";s:27:\"http:\/\/codingbee.net\/?p=464\";s:10:\"menu_order\";i:167;s:9:\"post_type\";s:4:\"post\";s:14:\"post_mime_type\";s:0:\"\";s:13:\"comment_count\";s:1:\"0\";s:6:\"filter\";s:3:\"raw\";}}s:10:\"post_count\";i:10;s:12:\"current_post\";i:-1;s:11:\"in_the_loop\";b:0;s:4:\"post\";r:107;s:8:\"comments\";N;s:13:\"comment_count\";i:0;s:15:\"current_comment\";i:-1;s:7:\"comment\";N;s:11:\"found_posts\";s:3:\"597\";s:13:\"max_num_pages\";d:60;s:21:\"max_num_comment_pages\";i:0;s:9:\"is_single\";b:0;s:10:\"is_preview\";b:0;s:7:\"is_page\";b:0;s:10:\"is_archive\";b:0;s:7:\"is_date\";b:0;s:7:\"is_year\";b:0;s:8:\"is_month\";b:0;s:6:\"is_day\";b:0;s:7:\"is_time\";b:0;s:9:\"is_author\";b:0;s:11:\"is_category\";b:0;s:6:\"is_tag\";b:0;s:6:\"is_tax\";b:0;s:9:\"is_search\";b:0;s:7:\"is_feed\";b:0;s:15:\"is_comment_feed\";b:0;s:12:\"is_trackback\";b:0;s:7:\"is_home\";b:0;s:6:\"is_404\";b:0;s:8:\"is_embed\";b:0;s:8:\"is_paged\";b:0;s:8:\"is_admin\";b:1;s:13:\"is_attachment\";b:0;s:11:\"is_singular\";b:0;s:9:\"is_robots\";b:0;s:13:\"is_posts_page\";b:0;s:20:\"is_post_type_archive\";b:0;s:25:\"\u0000WP_Query\u0000query_vars_hash\";s:32:\"d8ec62dcc0e5fd4bb0ff1d64ba1196e2\";s:28:\"\u0000WP_Query\u0000query_vars_changed\";b:0;s:17:\"thumbnails_cached\";b:0;s:19:\"\u0000WP_Query\u0000stopwords\";N;s:23:\"\u0000WP_Query\u0000compat_fields\";a:2:{i:0;s:15:\"query_vars_hash\";i:1;s:18:\"query_vars_changed\";}s:24:\"\u0000WP_Query\u0000compat_methods\";a:2:{i:0;s:16:\"init_query_flags\";i:1;s:15:\"parse_tax_query\";}}s:11:\"export_type\";s:8:\"specific\";s:21:\"filter_rules_hierarhy\";s:2:\"[]\";s:21:\"product_matching_mode\";s:6:\"strict\";s:17:\"wp_query_selector\";s:8:\"wp_query\";s:18:\"taxonomy_to_export\";s:0:\"\";s:18:\"created_at_version\";s:5:\"1.4.3\";s:18:\"is_loaded_template\";s:1:\"1\";s:14:\"saved_template\";s:1:\"1\";s:18:\"order_item_per_row\";i:1;s:29:\"order_item_fill_empty_columns\";i:1;s:8:\"filepath\";s:81:\"\/wpallexport\/exports\/5f9e5b0fcd4dd96aa0731d37dae5f1eb\/codingbee-posts-exports.xml\";s:16:\"current_filepath\";s:134:\"\/home\/codingbe\/public_html\/wp-content\/uploads\/wpallexport\/exports\/5f9e5b0fcd4dd96aa0731d37dae5f1eb\/current-codingbee-posts-exports.xml\";s:10:\"bundlepath\";s:81:\"\/wpallexport\/exports\/5f9e5b0fcd4dd96aa0731d37dae5f1eb\/codingbee-posts-exports.zip\";s:8:\"wp_query\";s:0:\"\";s:9:\"export_to\";s:3:\"xml\";s:15:\"export_to_sheet\";s:3:\"csv\";s:9:\"delimiter\";s:1:\",\";s:8:\"encoding\";s:5:\"UTF-8\";s:21:\"is_generate_templates\";i:1;s:18:\"is_generate_import\";i:1;s:9:\"import_id\";i:0;s:13:\"template_name\";s:36:\"Posts Export - 2017 January 22 12:21\";s:12:\"is_scheduled\";i:0;s:16:\"scheduled_period\";s:0:\"\";s:15:\"scheduled_email\";s:0:\"\";s:8:\"cc_label\";a:9:{i:0;s:5:\"title\";i:1;s:7:\"content\";i:2;s:4:\"date\";i:3;s:9:\"post_type\";i:4;s:8:\"post_tag\";i:5;s:6:\"status\";i:6;s:6:\"format\";i:7;s:8:\"category\";i:8;s:0:\"\";}s:7:\"cc_type\";a:9:{i:0;s:5:\"title\";i:1;s:7:\"content\";i:2;s:4:\"date\";i:3;s:9:\"post_type\";i:4;s:4:\"cats\";i:5;s:6:\"status\";i:6;s:6:\"format\";i:7;s:4:\"cats\";i:8;s:0:\"\";}s:8:\"cc_value\";a:9:{i:0;s:5:\"title\";i:1;s:7:\"content\";i:2;s:4:\"date\";i:3;s:9:\"post_type\";i:4;s:8:\"post_tag\";i:5;s:6:\"status\";i:6;s:6:\"format\";i:7;s:8:\"category\";i:8;s:0:\"\";}s:7:\"cc_name\";a:9:{i:0;s:5:\"Title\";i:1;s:7:\"Content\";i:2;s:4:\"Date\";i:3;s:9:\"Post Type\";i:4;s:4:\"Tags\";i:5;s:6:\"Status\";i:6;s:6:\"Format\";i:7;s:10:\"Categories\";i:8;s:0:\"\";}s:6:\"cc_php\";a:9:{i:0;s:1:\"0\";i:1;s:1:\"0\";i:2;s:1:\"0\";i:3;s:1:\"0\";i:4;s:1:\"0\";i:5;s:1:\"0\";i:6;s:1:\"0\";i:7;s:1:\"0\";i:8;s:1:\"0\";}s:7:\"cc_code\";a:9:{i:0;s:0:\"\";i:1;s:0:\"\";i:2;s:0:\"\";i:3;s:0:\"\";i:4;s:0:\"\";i:5;s:0:\"\";i:6;s:0:\"\";i:7;s:0:\"\";i:8;s:0:\"\";}s:6:\"cc_sql\";a:9:{i:0;s:1:\"0\";i:1;s:1:\"0\";i:2;s:1:\"0\";i:3;s:1:\"0\";i:4;s:1:\"0\";i:5;s:1:\"0\";i:6;s:1:\"0\";i:7;s:1:\"0\";i:8;s:1:\"0\";}s:10:\"cc_options\";a:9:{i:0;s:1:\"0\";i:1;s:1:\"0\";i:2;s:1:\"0\";i:3;s:1:\"0\";i:4;s:1:\"0\";i:5;s:1:\"0\";i:6;s:1:\"0\";i:7;s:1:\"0\";i:8;s:1:\"0\";}s:11:\"cc_settings\";a:9:{i:0;s:1:\"0\";i:1;s:1:\"0\";i:2;s:1:\"0\";i:3;s:1:\"0\";i:4;s:1:\"0\";i:5;s:1:\"0\";i:6;s:1:\"0\";i:7;s:1:\"0\";i:8;s:1:\"0\";}s:13:\"friendly_name\";s:23:\"codingbee-posts-exports\";s:6:\"fields\";a:4:{i:0;s:7:\"default\";i:1;s:5:\"other\";i:2;s:2:\"cf\";i:3;s:4:\"cats\";}s:3:\"ids\";a:9:{i:0;s:1:\"1\";i:1;s:1:\"1\";i:2;s:1:\"1\";i:3;s:1:\"1\";i:4;s:1:\"1\";i:5;s:1:\"1\";i:6;s:1:\"1\";i:7;s:1:\"1\";i:8;s:1:\"1\";}s:5:\"rules\";a:0:{}s:21:\"records_per_iteration\";s:3:\"600\";s:11:\"include_bom\";s:1:\"0\";s:17:\"include_functions\";i:1;s:19:\"split_large_exports\";s:1:\"0\";s:25:\"split_large_exports_count\";s:5:\"10000\";s:16:\"split_files_list\";a:0:{}s:12:\"main_xml_tag\";s:4:\"data\";s:14:\"record_xml_tag\";s:4:\"post\";s:16:\"save_template_as\";s:1:\"1\";s:4:\"name\";s:25:\"codingbee_export_template\";s:21:\"export_only_new_stuff\";s:1:\"0\";s:24:\"creata_a_new_export_file\";s:1:\"0\";s:15:\"attachment_list\";a:0:{}s:21:\"order_include_poducts\";i:0;s:25:\"order_include_all_poducts\";i:0;s:21:\"order_include_coupons\";i:0;s:25:\"order_include_all_coupons\";i:0;s:23:\"order_include_customers\";i:0;s:27:\"order_include_all_customers\";i:0;s:9:\"migration\";s:5:\"1.4.3\";s:17:\"xml_template_type\";s:6:\"simple\";s:19:\"custom_xml_template\";s:118:\"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<data>\r\n\t<!-- BEGIN LOOP -->\r\n\t<post>\r\n\r\n\t<\/post>\r\n\t<!-- END LOOP -->\r\n<\/data>\";s:26:\"custom_xml_template_header\";s:0:\"\";s:24:\"custom_xml_template_loop\";s:0:\"\";s:26:\"custom_xml_template_footer\";s:0:\"\";s:27:\"custom_xml_template_options\";a:0:{}s:22:\"custom_xml_cdata_logic\";s:3:\"all\";s:21:\"show_cdata_in_preview\";s:1:\"1\";s:17:\"export_variations\";s:1:\"2\";s:23:\"export_variations_title\";s:1:\"1\";s:18:\"include_header_row\";s:1:\"1\";s:4:\"file\";s:0:\"\";s:8:\"tpl_data\";a:5:{s:4:\"name\";s:36:\"Posts Export - 2017 January 22 12:21\";s:18:\"is_keep_linebreaks\";i:1;s:13:\"is_leave_html\";i:0;s:14:\"fix_characters\";i:0;s:7:\"options\";a:50:{s:4:\"type\";s:4:\"post\";s:11:\"wizard_type\";s:3:\"new\";s:8:\"deligate\";s:11:\"wpallexport\";s:11:\"custom_type\";s:4:\"post\";s:6:\"status\";s:5:\"xpath\";s:23:\"is_multiple_page_parent\";s:2:\"no\";s:10:\"unique_key\";s:0:\"\";s:3:\"acf\";a:0:{}s:6:\"fields\";a:0:{}s:23:\"is_multiple_field_value\";a:0:{}s:14:\"multiple_value\";a:0:{}s:16:\"fields_delimiter\";a:0:{}s:15:\"update_all_data\";s:3:\"yes\";s:16:\"is_update_status\";i:1;s:15:\"is_update_title\";i:1;s:16:\"is_update_author\";i:1;s:14:\"is_update_slug\";i:1;s:17:\"is_update_content\";i:1;s:17:\"is_update_excerpt\";i:1;s:15:\"is_update_dates\";i:1;s:20:\"is_update_menu_order\";i:1;s:16:\"is_update_parent\";i:1;s:21:\"is_update_attachments\";i:1;s:13:\"is_update_acf\";i:1;s:16:\"update_acf_logic\";s:11:\"full_update\";s:8:\"acf_list\";s:0:\"\";s:22:\"is_update_product_type\";i:1;s:20:\"is_update_attributes\";i:1;s:23:\"update_attributes_logic\";s:11:\"full_update\";s:15:\"attributes_list\";s:0:\"\";s:16:\"is_update_images\";i:1;s:23:\"is_update_custom_fields\";i:1;s:26:\"update_custom_fields_logic\";s:11:\"full_update\";s:18:\"custom_fields_list\";s:0:\"\";s:20:\"is_update_categories\";i:1;s:23:\"update_categories_logic\";s:11:\"full_update\";s:15:\"taxonomies_list\";s:0:\"\";s:9:\"export_id\";s:1:\"2\";s:5:\"title\";s:10:\"{Title[1]}\";s:36:\"single_product_id_first_is_variation\";s:10:\"{Title[1]}\";s:7:\"content\";s:12:\"{Content[1]}\";s:4:\"date\";s:9:\"{Date[1]}\";s:10:\"tax_assing\";a:1:{s:8:\"post_tag\";i:1;}s:9:\"tax_logic\";a:1:{s:8:\"post_tag\";s:8:\"multiple\";}s:20:\"multiple_term_assing\";a:1:{s:8:\"post_tag\";i:1;}s:18:\"tax_multiple_xpath\";a:1:{s:8:\"post_tag\";s:9:\"{Tags[1]}\";}s:18:\"tax_multiple_delim\";a:1:{s:8:\"post_tag\";s:1:\"|\";}s:12:\"status_xpath\";s:11:\"{Status[1]}\";s:16:\"required_add_ons\";a:0:{}s:12:\"root_element\";s:4:\"post\";}}s:9:\"scheduled\";s:0:\"\";}"}]